{"version":3,"sources":["./src/app/pages/UserManagement/view-employer/view-employer.component.html","./src/app/pages/UserManagement/view-employer/view-employer-routing.module.ts","./src/app/pages/UserManagement/view-employer/view-employer.module.ts","./src/app/pages/UserManagement/view-employer/view-employer.component.scss","./src/app/pages/UserManagement/view-employer/view-employer.component.ts"],"names":[],"mappings":"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","file":"pages-UserManagement-view-employer-view-employer-module-es2015.js","sourcesContent":["export default \"<section class=\\\"view-employer-sec\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n    \\t\\t\\t\\t<!-- <mat-tab-group> -->\\n    \\t\\t\\t\\t\\t<!-- <mat-tab label=\\\"Employer Profile Details\\\"> -->\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<strong>Employer Profile Detail</strong>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<form class=\\\"\\\" [formGroup]=\\\"EmployerDetails\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"edit-wrapper\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"text-center edit-profile\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"user_dp position-relative\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"assets/img/avatars/8.jpg\\\" class=\\\"img-fluid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"edit-form mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"edit-form-fields\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-8\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row only-view\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>First Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"Mike\\\" formControlName=\\\"first_name\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Last Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"John\\\" formControlName=\\\"last_name\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row only-view\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Work Email Address</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"abc@gmail.com\\\" formControlName=\\\"email\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Company Name</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"abc\\\" formControlName=\\\"company_name\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row only-view\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Job Title</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"Employer\\\" formControlName=\\\"job_title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Creation Date (Time)</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"{{EmployerDetails.value.creation_date | date:'dd/mm/yyyy'}} ({{EmployerDetails.value.creation_date | date:'shortTime'}})\\\" formControlName=\\\"creation_date\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <mat-form-field appearance=\\\"fill\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-label>Choose a date</mat-label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput [matDatepicker]=\\\"picker\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-datepicker #picker></mat-datepicker>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row only-view\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Password</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"abc123@\\\" formControlName=\\\"password\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Status</label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"Active\\\" formControlName=\\\"status\\\"> \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"edit-btns text-right\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a class=\\\"btn btn-primary\\\" routerLink=\\\"/employersList\\\">Back</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<!-- </mat-tab> -->\\n\\t\\t\\t\\t\\t\\t<!-- <mat-tab label=\\\"Orders and Insurances\\\"> -->\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<strong>View Graduate Details</strong>\\n\\t\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t      <div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t        <mat-form-field appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t\\t\\t          <mat-label>Filter</mat-label>\\n\\t\\t\\t\\t\\t\\t\\t          <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Mia\\\" class=\\\"filter_input\\\" #input>\\n\\t\\t\\t\\t\\t\\t\\t        </mat-form-field>\\n\\n\\t\\t\\t\\t\\t\\t\\t        <div class=\\\"mat-elevation-z8\\\">\\n\\t\\t\\t\\t\\t\\t\\t          <div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t\\t            <table mat-table [dataSource]=\\\"dataSource\\\" matSort> -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- Checkbox Column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"select\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef>\\n\\t\\t\\t\\t\\t\\t\\t                  <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n\\t\\t\\t\\t\\t\\t\\t                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n\\t\\t\\t\\t\\t\\t\\t                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n\\t\\t\\t\\t\\t\\t\\t                    [aria-label]=\\\"checkboxLabel()\\\" class=\\\"td-check\\\">\\n\\t\\t\\t\\t\\t\\t\\t                  </mat-checkbox>\\n\\t\\t\\t\\t\\t\\t\\t                </th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\">\\n\\t\\t\\t\\t\\t\\t\\t                  <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n\\t\\t\\t\\t\\t\\t\\t                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n\\t\\t\\t\\t\\t\\t\\t                    [checked]=\\\"selection.isSelected(row)\\\"\\n\\t\\t\\t\\t\\t\\t\\t                    [aria-label]=\\\"checkboxLabel(row)\\\" class=\\\"td-check\\\">\\n\\t\\t\\t\\t\\t\\t\\t                  </mat-checkbox>\\n\\t\\t\\t\\t\\t\\t\\t                </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- ID Column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"id\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No </th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t              <!-- postedby Column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"transid\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header>Invoice ID </th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.transid}} </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\n\\n\\t\\t\\t\\t\\t\\t\\t              <!-- Company Column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"offer\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header>Offer Selected</th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.offer}} </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t               <!-- Job title Column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"startdate\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header>Start Date</th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.startdate}} </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\t\\t\\t\\t\\t\\t\\t              \\n\\t\\t\\t\\t\\t\\t\\t              <!-- status column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"subsexp\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header> Expiry date </th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\">{{row.subsexp}}</td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t              <ng-container matColumnDef=\\\"status\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"><span class=\\\"badge badge-success\\\">Paid</span></td>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"><span class=\\\"badge badge-primary\\\">Pending</span></td>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"><span class=\\\"badge badge-danger\\\">Failed</span></td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t              <!-- Company Column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"amount\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header>Amount</th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> ${{row.amount}} </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t              <ng-container matColumnDef=\\\"paid\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header>Paid</th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> ${{row.paid}} </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t              <ng-container matColumnDef=\\\"balance\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header>Balance</th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> ${{row.balance}} </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\t\\t\\t\\t\\t\\t\\t               <!-- Action column -->\\n\\t\\t\\t\\t\\t\\t\\t               <!-- <ng-container matColumnDef=\\\"action\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef> Action </th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\">\\n\\t\\t\\t\\t\\t\\t\\t                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"td-btn\\\">\\n\\t\\t\\t\\t\\t\\t\\t                      <mat-icon>more_vert</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t                    </button>\\n\\t\\t\\t\\t\\t\\t\\t                    <mat-menu #menu=\\\"matMenu\\\" class=\\\"td-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"/\\\">\\n\\t\\t\\t\\t\\t\\t\\t                        <mat-icon class=\\\"material-icons-outlined\\\">visibility</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t                        <span>View</span>\\n\\t\\t\\t\\t\\t\\t\\t                      </a>\\n\\t\\t\\t\\t\\t\\t\\t                      <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"smallModal.show()\\\">\\n\\t\\t\\t\\t\\t\\t\\t                        <mat-icon class=\\\"material-icons-outlined\\\">delete</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t                        <span>Delete</span>\\n\\t\\t\\t\\t\\t\\t\\t                      </a>\\n\\t\\t\\t\\t\\t\\t\\t                    </mat-menu>\\n\\t\\t\\t\\t\\t\\t\\t                </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t              <!-- Progress Column -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <ng-container matColumnDef=\\\"progress\\\">\\n\\t\\t\\t\\t\\t\\t\\t                <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\n\\t\\t\\t\\t\\t\\t\\t                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\n\\t\\t\\t\\t\\t\\t\\t              </ng-container> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n\\t\\t\\t\\t\\t\\t\\t              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t              <!-- Row shown when there is no matching data. -->\\n\\t\\t\\t\\t\\t\\t\\t              <!-- <tr class=\\\"mat-row\\\" *matNoDataRow>\\n\\t\\t\\t\\t\\t\\t\\t                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n\\t\\t\\t\\t\\t\\t\\t              </tr>\\n\\t\\t\\t\\t\\t\\t\\t            </table>\\n\\t\\t\\t\\t\\t\\t\\t          </div>\\n\\t\\t\\t\\t\\t\\t\\t          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" aria-label=\\\"Select page of users\\\"></mat-paginator>\\n\\t\\t\\t\\t\\t\\t\\t        </div>\\n\\t\\t\\t\\t\\t\\t\\t      </div>\\n\\t\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</mat-tab> -->\\n        \\t\\t\\t<!-- </mat-tab-group> -->\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</section>\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewEmployerComponent } from './view-employer.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: ViewEmployerComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ViewEmployerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewEmployerRoutingModule } from './view-employer-routing.module';\nimport { ViewEmployerComponent } from './view-employer.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n\n\n@NgModule({\n  declarations: [\n    ViewEmployerComponent\n  ],\n  imports: [\n    CommonModule,\n    ViewEmployerRoutingModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    MatProgressBarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatInputModule,\n    ModalModule,\n    BsDropdownModule.forRoot() ,\n    MatTabsModule\n\n  ],\n  providers: [BsModalRef]\n})\nexport class ViewEmployerModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2aWV3LWVtcGxveWVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {SelectionModel} from '@angular/cdk/collections';\n\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TopgradserviceService } from '../../../topgradservice.service';\n\n\nexport interface UserData {\n  id: string;\n  transid: string;\n  amount: string;\n  paid: string;\n  balance: string;\n  offer: string;\n  startdate: string;\n  subsexp: string;\n}\n\n/** Constants used to fill up our data base. */\n\nconst TRANSID: string[] = [\n  'INV-65D9E592', 'INV-95D9E0897', 'INV-32D9E092'\n];\n\n\nconst AMOUNT: string[] = [\n  '195',\n];\n\nconst PAID: string[] = [\n  '195',\n];\n\nconst BALANCE: string[] = [\n  '0',\n];\n\n\nconst OFFER: string[] = [\n  'Basic Internship Agreement', 'Insurance and Agreement', 'Insurance Only'\n];\nconst SDATE: string[] = [\n  '08-09-2021', '07-09-2021', '01-09-2021', '08-09-2021', '08-09-2021', '08-09-2021', '08-09-2021', '08-09-2021'\n];\nconst SUBSEXP: string[] = [\n  '08-09-2021', '07-09-2021', '01-09-2021', '08-09-2021', '08-09-2021', '08-09-2021', '08-09-2021', '08-09-2021'\n];\n\n@Component({\n  selector: 'app-view-employer',\n  templateUrl: './view-employer.component.html',\n  styleUrls: ['./view-employer.component.scss']\n})\nexport class ViewEmployerComponent implements OnInit {\n\n  displayedColumns: string[] = ['select', 'id', 'transid', 'offer', 'startdate', 'subsexp', 'status', 'amount', 'paid', 'action'];\n  dataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n  \n  @ViewChild('smallModal') public smallModal: ModalDirective;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  EmployerDetails = this.fb.group({\n    first_name: ['', [Validators.required, Validators.maxLength(50)]],\n    last_name: ['', [Validators.required, Validators.maxLength(50)]],\n    email: ['', [Validators.required, Validators.maxLength(50)]],\n    company_name: ['', [Validators.required, Validators.maxLength(50)]],\n    job_title: ['', [Validators.required, Validators.maxLength(50)]],\n    creation_date: ['', [Validators.required, Validators.maxLength(50)]],\n    password: ['', [Validators.required, Validators.maxLength(50)]],\n    status: ['', [Validators.required, Validators.maxLength(50)]],\n    Image: ['',],\n    county:['']\n  });\n\n\n\n  constructor(private _snackBar: MatSnackBar, private route:ActivatedRoute,private Service:TopgradserviceService, private fb:FormBuilder, private router: Router ) { \n  \t// Create 100 users\n    const users = Array.from({length: 50}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  ngOnInit(): void {\n    this.employerdetails();\n    \n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n   /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserData): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  employerdetails(){\n    var obj = {\n      user_id: this.route.snapshot.paramMap.get('id')\n    }\n    this.Service.getEmployerDetail(obj).subscribe((resp) => {\n      console.log(\"employer detail is ====>\", resp)\n\n      this.EmployerDetails.patchValue({\n        first_name: resp.data.first_name,\n        last_name: resp.data.last_name,\n        email:resp.data.email,\n        company_name: resp.data.company_name,\n        job_title: resp.data.role,\n        password: resp.data.password,\n        creation_date: resp.data.createdAt,\n        status: resp.data.status\n      })\n      console.log(\"forrmmmmmmmm==========>\",this.EmployerDetails);\n      \n    }) \n  }\n\n}\n\nfunction createNewUser(id: number): UserData {\n  const transid = TRANSID[Math.round(Math.random() * (TRANSID.length - 1))] + ' ';\n  const amount = AMOUNT[Math.round(Math.random() * (AMOUNT.length - 1))] + ' ';\n  const paid = PAID[Math.round(Math.random() * (PAID.length - 1))] + ' ';\n  const balance = BALANCE[Math.round(Math.random() * (BALANCE.length - 1))] + ' ';\n  const offer = OFFER[Math.round(Math.random() * (OFFER.length - 1))] + ' ';\n  const startdate = SDATE[Math.round(Math.random() * (SDATE.length - 1))] + ' ';\n  const subsexp = SUBSEXP[Math.round(Math.random() * (SUBSEXP.length - 1))] + ' ';\n\n  return {\n    id: id.toString() + '.',\n    transid: transid,\n    amount: amount,\n    paid: paid,\n    balance: balance,\n    offer: offer,\n    startdate: startdate,\n    subsexp: subsexp\n\n  };\n\n  \n}\n\n"],"sourceRoot":"webpack:///"}