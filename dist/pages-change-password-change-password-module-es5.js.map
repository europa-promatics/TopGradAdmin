{"version":3,"sources":["webpack:///src/app/pages/change-password/change-password.component.html","webpack:///src/app/pages/change-password/change-password-routing.module.ts","webpack:///src/app/pages/change-password/change-password.component.scss","webpack:///src/app/pages/change-password/change-password.component.ts","webpack:///src/app/pages/change-password/change-password.module.ts"],"names":["routes","path","component","ChangePasswordRoutingModule","imports","forChild","exports","ChangePasswordComponent","sanitizer","Service","_snackBar","_formBuilder","router","changepwdform","group","required","validator","checkPassword","console","log","pass","controls","new_pwd","value","confirm_password","confirm_pwd","flag","returnable","pwdNotSame","obj","old_password","current_pwd","new_password","changepwd","subscribe","data","code","open","duration","reset","err","status","selector","template","ChangePasswordModule","declarations"],"mappings":"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","file":"pages-change-password-change-password-module-es5.js","sourcesContent":["export default \"\\n<section class=\\\"edit-employer-sec\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"card-header\\\">\\n\\t\\t\\t\\t\\t\\t<strong>Change Password</strong>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"edit-form mt-4\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<form [formGroup]=\\\"changepwdform\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"edit-form-fields\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-8\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label>Current Password</label>\\n                                                    <input type=\\\"password\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"\\\" formControlName=\\\"current_pwd\\\">\\n                                                </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"(changepwdform.controls.current_pwd?.touched || changepwdform.controls.current_pwd?.dirty) && changepwdform.controls.current_pwd?.invalid && changepwdform.controls.current_pwd.errors?.required\\\" class=\\\"invalid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*Please enter current password\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    </div>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label>New Password</label>\\n                                                    <input type=\\\"password\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"\\\" formControlName=\\\"new_pwd\\\">\\n                                                </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"(changepwdform.controls.new_pwd?.touched || changepwdform.controls.new_pwd?.dirty) && changepwdform.controls.new_pwd?.invalid && changepwdform.controls.new_pwd.errors?.required\\\" class=\\\"invalid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*Please enter new password\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    </div>\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label>Confirm Password</label>\\n                                                    <input type=\\\"password\\\" name=\\\"\\\" class=\\\"form-control\\\" value=\\\"\\\" formControlName=\\\"confirm_pwd\\\">\\n                                                </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"(changepwdform.controls.confirm_pwd?.touched || changepwdform.controls.confirm_pwd?.dirty) && changepwdform.controls.confirm_pwd?.invalid && changepwdform.controls.confirm_pwd.errors?.required\\\" class=\\\"invalid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*Please enter confirm password\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"(changepwdform.controls.confirm_pwd?.touched || changepwdform.controls.confirm_pwd?.dirty) && changepwdform.controls.confirm_pwd?.valid && changepwdform?.errors?.pwdNotSame \\\" class=\\\"invalid\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t*Password do not match\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t    </div>\\n                                                <div class=\\\"edit-btns d-flex justify-content-end\\\">\\n                                                    <button class=\\\"btn btn-primary mr-4\\\" (click)=\\\"change()\\\">Save</button>\\n                                                    <button class=\\\"btn btn-primary\\\">Cancel</button>\\n                                                </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\n</section>\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ChangePasswordComponent } from './change-password.component';\n\nconst routes: Routes = [\n  {\n\t\tpath:'',\n\t\tcomponent: ChangePasswordComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChangePasswordRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TopgradserviceService } from '../../topgradservice.service';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changepwdform: FormGroup;\n  current_pwd: any;\n  new_pwd: any;\n  confirm_pwd: any;\n\n  constructor(private sanitizer: DomSanitizer, private Service: TopgradserviceService, private _snackBar: MatSnackBar, private _formBuilder: FormBuilder, private router: Router) \n  {\n    this.changepwdform = this._formBuilder.group({\n      'current_pwd': ['', [Validators.required]],\n      'new_pwd': ['', [Validators.required]],\n      'confirm_pwd': ['', [Validators.required]]\n      \n    }, {\n      validator: this.checkPassword,\n      })\n   }\n\n  ngOnInit(): void {\n    console.log(this.changepwdform);\n    \n  }\n\n  checkPassword(group: FormGroup) {\n    let pass = group.controls.new_pwd.value;\n    let confirm_password = group.controls.confirm_pwd.value;\n    var flag = false\n    let returnable:any = {\n    pwdNotSame: null\n    }\n    if(pass != confirm_password){\n    returnable.pwdNotSame = true\n    flag=true\n    }\n    return flag ? returnable : null;\n    }\n\n  change(){\n     console.log(this.changepwdform);\n     var obj = {\n      old_password: this.changepwdform.value.current_pwd,\n      new_password: this.changepwdform.value.new_pwd\n      }\n      console.log(\"onnnn\", obj)\n      this.Service.changepwd(obj).subscribe(data => {\n      console.log(\"main data for users is ====\", data)\n      if(data.code=200){\n        this._snackBar.open(\"Password changed successfully\",\"close\",{\n          duration: 2000\n          });\n          this.changepwdform.reset();\n      }\n      }, err => {\n        console.log(err)\n        if (err.status = 409) {\n          this._snackBar.open(\"Current password is Incorrect\",\"close\",{\n            duration: 2000\n            });\n        } else {\n        this._snackBar.open(\"Some Error Occued\",\"close\",{\n          duration: 2000\n          });\n        }\n        \n        })\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChangePasswordRoutingModule } from './change-password-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { MatIconModule } from '@angular/material/icon';\n\n\n@NgModule({\n  declarations: [\n    ChangePasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    ChangePasswordRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule\n  ]\n})\nexport class ChangePasswordModule { }\n"]}