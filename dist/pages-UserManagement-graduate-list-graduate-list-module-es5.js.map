{"version":3,"sources":["webpack:///src/app/pages/UserManagement/graduate-list/graduate-list.module.ts","webpack:///src/app/pages/UserManagement/graduate-list/graduate-list.component.html","webpack:///src/app/pages/UserManagement/graduate-list/graduate-list.component.scss","webpack:///src/app/pages/UserManagement/graduate-list/graduate-list-routing.module.ts","webpack:///src/app/pages/UserManagement/graduate-list/graduate-list.component.ts"],"names":["GraduateListModule","declarations","imports","forRoot","providers","routes","path","component","GraduateListRoutingModule","forChild","exports","LNAME","NAMES","EMAILS","CREATION","LOCATION","WRKPREF","AVAILABILITY","EDUCATION","LICENSE","WRKRIGHTS","SKILLS","GraduateListComponent","route","Service","_snackBar","gradlist","displayedColumns","selection","search","filter","users","Array","from","length","_","k","createNewUser","dataSource","paginator","sort","graduatelist","id","smallModal","show","delId","obj","deletedAt","user_id","deleteuser","subscribe","res","console","log","hide","code","open","duration","ngOnInit","err","limit","offset","role","data","totalRecords","status","filterValue","target","value","event","paginationOptionChange","e","array","name","evt","topPage","pageIndex","pageSize","sortedData","count","numSelected","selected","numRows","isAllSelected","clear","select","row","isSelected","selector","template","Math","round","random","email","company","location","wrkpref","availability","education","license","wrkrights","skills","toString","lname"],"mappings":"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","file":"pages-UserManagement-graduate-list-graduate-list-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GraduateListRoutingModule } from './graduate-list-routing.module';\nimport { GraduateListComponent } from './graduate-list.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n\n\n@NgModule({\n  declarations: [\n    GraduateListComponent\n  ],\n  imports: [\n    CommonModule,\n    GraduateListRoutingModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    FormsModule,\n    MatIconModule,\n    MatMenuModule,\n    MatInputModule,\n    ModalModule,\n    BsDropdownModule.forRoot() ,\n    MatProgressBarModule\n  ],\n  providers: [BsModalRef]\n})\nexport class GraduateListModule { }\n","export default \"<section class=\\\"grad-mn-list\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"tabl_upr d-flex align-items-center justify-content-between\\\">\\n          <mat-form-field appearance=\\\"standard\\\">\\n            <mat-label>Filter</mat-label>\\n            <input matInput (keyup)=\\\"applyFilter($event)\\\" [(ngModel)]=\\\"search\\\" placeholder=\\\"Ex. Mia\\\" class=\\\"filter_input\\\" #input>\\n          </mat-form-field>\\n          <div class=\\\"fltr_div d-flex align-items-center\\\">\\n            <div class=\\\"form-group mb-0 ml-3\\\">\\n              <select class=\\\"form-control custom-select\\\" (change)=\\\"selectfilter($event)\\\">\\n                  <option selected>Select Filter</option>\\n                  <option>Work Preference</option>\\n                  <option>Availability</option>\\n                  <option>Work Rights</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group mb-0 ml-3\\\">\\n              <select class=\\\"form-control custom-select\\\" (change)=\\\"selectsubfilter($event)\\\" [(ngModel)]=\\\"filter\\\">\\n                  <option selected>Select Sub-Filter</option>\\n                  <option *ngFor=\\\"let i of array\\\" value=\\\"{{i.value}}\\\">{{i.name}}</option>\\n                  <!-- <option>Sydney</option> -->\\n              </select>\\n            </div>\\n            <div class=\\\"appl_fltr ml-3\\\">\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"applysubfilter($event)\\\">\\n              Apply Filter\\n            </button>\\n            </div>\\n          </div>\\n          \\n\\n          <!-- <div class=\\\"grad_filter dropdown ml-4\\\" dropdown>\\n            \\n            <a class=\\\"btn btn-primary\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" dropdownToggle (click)=\\\"false\\\">\\n              Filter\\n            </a>\\n            <ul class=\\\"dropdown-menu dropdown-menu-left\\\" *dropdownMenu aria-labelledby=\\\"simple-dropdown\\\">\\n              <li class=\\\"dropdown-submenu\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Location<span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Melbourne</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Sydney</a></li>\\n                </ul>\\n              </li>\\n              <li class=\\\"dropdown-submenu\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Work Preference<span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Open</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Any</a></li>\\n                </ul>\\n              </li>\\n              <li class=\\\"dropdown-submenu\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Availability<span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Any</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Remote</a></li>\\n                </ul>\\n              </li>\\n              <li class=\\\"dropdown-submenu\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Education<span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Macquarie University</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">The University of New England</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">The University of Sydney</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Western Sydney University</a></li>\\n                </ul>\\n              </li>\\n              <li class=\\\"dropdown-submenu\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">License<span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Available</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Not Available</a></li>\\n                </ul>\\n              </li>\\n              <li class=\\\"dropdown-submenu\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Work Rights<span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Available</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Not Available</a></li>\\n                </ul>\\n              </li>\\n              <li class=\\\"dropdown-submenu\\\">\\n                <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Skills<span class=\\\"caret\\\"></span></a>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Figma</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Adobe Illustrator</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Data Analysis</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Adobe Photoshop</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Adobe XD</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Marketing</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Python</a></li>\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\">Resume Writing</a></li>\\n                </ul>\\n              </li>\\n              \\n            </ul>\\n          </div> -->\\n        </div>\\n        \\n\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table mat-table [dataSource]=\\\"gradlist\\\" matSort>\\n              <!-- Checkbox Column -->\\n              <ng-container matColumnDef=\\\"select\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                    [aria-label]=\\\"checkboxLabel()\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                    [aria-label]=\\\"checkboxLabel(row)\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </td>\\n              </ng-container>\\n\\n              <!-- ID Column -->\\n              <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No </th>\\n                <td mat-cell *matCellDef=\\\"let row; let i=index\\\">  {{i+1}}</td>\\n              </ng-container>\\n\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>First Name </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.first_name | titlecase}} </td>\\n              </ng-container>\\n              <!-- Email Column -->\\n              <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Email Address</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">  {{row?.email | titlecase}}  </td>\\n              </ng-container>\\n              <!-- Company Column -->\\n              <ng-container matColumnDef=\\\"company\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Creation Date (Time)</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.createdAt | date}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"location\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Location</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.location?.name | titlecase}} </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"wrkpref\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Work Preference</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row?.work_preference | titlecase}}  </td>\\n              </ng-container>\\n\\n              <ng-container matColumnDef=\\\"availability\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Availability</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.availability | titlecase}} </td>\\n              </ng-container>\\n\\n              <!-- <ng-container matColumnDef=\\\"education\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Education</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.education}} </td>\\n              </ng-container> -->\\n\\n              <!-- <ng-container matColumnDef=\\\"license\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>License</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.license}} </td>\\n              </ng-container> -->\\n\\n              <ng-container matColumnDef=\\\"wrkrights\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Work Rights</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.work_right?.work_right | titlecase}} </td>\\n              </ng-container>\\n\\n              <!-- <ng-container matColumnDef=\\\"skills\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Skills</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.skills}} </td>\\n              </ng-container> -->\\n             \\n              <!-- lname Column -->\\n              <ng-container matColumnDef=\\\"lname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.last_name | titlecase}} </td>\\n              </ng-container>\\n              <!-- status column -->\\n              <ng-container matColumnDef=\\\"status\\\">\\n                <th mat-header-cell *matHeaderCellDef> Status </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                     <mat-slide-toggle [checked]=\\\"row.status=='active'?true:false\\\"></mat-slide-toggle>\\n                   </td>\\n              </ng-container>\\n               <!-- Action column -->\\n               <ng-container matColumnDef=\\\"action\\\">\\n                <th mat-header-cell *matHeaderCellDef> Action </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"td-btn\\\">\\n                      <mat-icon>more_vert</mat-icon>\\n                    </button>\\n                    <mat-menu #menu=\\\"matMenu\\\" class=\\\"td-menu\\\">\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"/viewGraduate/{{row._id}}\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">visibility</mat-icon>\\n                        <span>View</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"/editGraduate/{{row._id}}\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">edit</mat-icon>\\n                        <span>Edit</span>\\n                      </a>\\n                      <!-- <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"resetpswrd.show()\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">cached</mat-icon>\\n                        <span>Reset Password</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">block</mat-icon>\\n                        <span>Ban</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">message</mat-icon>\\n                        <span>Send Message</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">email</mat-icon>\\n                        <span>Send Email</span>\\n                      </a> -->\\n                      <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"modal(row._id)\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">delete</mat-icon>\\n                        <span>Delete</span>\\n                      </a>\\n                    </mat-menu>\\n                </td>\\n              </ng-container>\\n\\n              <!-- Progress Column -->\\n              <!-- <ng-container matColumnDef=\\\"progress\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\n              </ng-container> -->\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n              <!-- Row shown when there is no matching data. -->\\n              <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n              </tr>\\n            </table>\\n          </div>\\n\\n          <mat-paginator [length]=\\\"totalRecords\\\" [pageIndex]=\\\"topPage\\\" [pageSize]=\\\"limit\\\"\\n          [pageSizeOptions]=\\\"getPageSizeOptions()\\\" (page)=\\\"paginationOptionChange($event)\\\"  aria-label=\\\"Select page of users\\\"></mat-paginator>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n<!-- Modal -->\\n<div bsModal #smallModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"smallModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"smallModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n            <img src=\\\"assets/img/Group 225.png\\\">\\n          </span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"mb-0\\\">Are you sure you want to delete the selected user's account?</p>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"smallModal.hide()\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deletegraduate(this.delId)\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div bsModal #resetpswrd=\\\"bs-modal\\\" class=\\\"modal fade reset_pswrd\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"replyModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"resetpswrd.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n            <img src=\\\"assets/img/Group 225.png\\\">\\n          </span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Current Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" value=\\\"abc123@\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>New Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Confirm Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"resetpswrd.hide()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJncmFkdWF0ZS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GraduateListComponent } from './graduate-list.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: GraduateListComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GraduateListRoutingModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { TopgradserviceService } from '../../../topgradservice.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\ndeclare var $;\n\n\nexport interface UserData {\n  id: string;\n  name: string;\n  lname: string;\n  email: string;\n  company: string;\n  location: string;\n  wrkpref: string;\n  availability: string;\n  education: string;\n  license: string;\n  wrkrights: string;\n  skills: string;\n}\n\n/** Constants used to fill up our data base. */\nconst LNAME: string[] = [\n  'A', 'T', 'V', 'C', 'J', 'R', 'J', 'J'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\nconst EMAILS: string[] = [\n  'maia@gmail.com', 'asher@gmail.com', 'olivia@gmail.com', 'atticus@gmail.com', 'amelia@gmail.com', 'jack@gmail.com', 'charlotte@gmail.com', 'theodore@gmail.com', 'isla@gmail.com', 'oliver@gmail.com',\n  'isabella@gmail.com', 'jasper@gmail.com', 'cora@gmail.com', 'levi@gmail.com', 'violet@gmail.com', 'arthur@gmail.com', 'mia@gmail.com', 'thomas@gmail.com', 'elizabeth@gmail.com'\n];\nconst CREATION: string[] = [\n  '12-01-2012 (06:22 PM)', '12-12-2012 (02:22 PM)', '12-12-2012 (03:12 PM)', '24-11-2012 (03:12 PM)', '12-01-2012 (09:23 AM)', '12-01-2012 (09:23 AM)', '12-01-2012 (10:23 AM)', '12-01-2012 (07:14 PM)', '12-01-2012 (03:30 PM)',\n  '09-01-2021 (09:12 AM)', '09-01-2021 (06:22 PM)', '12-01-2012 (02:22 PM)', '12-04-2012 (03:12 PM)', '12-01-2012 (09:12 AM)', '12-01-2012 (06:22 PM)', '12-01-2012 (06:22 PM)', '09-01-2021 (06:22 PM)'\n];\nconst LOCATION: string[] = [\n  'Sydney', 'Melbourne'\n];\nconst WRKPREF: string[] = [\n  'Open', 'Any'\n];\nconst AVAILABILITY: string[] = [\n  'Any', 'Remote'\n];\nconst EDUCATION: string[] = [\n  'Macquarie University', 'The University of New England', 'The University of Sydney', 'Western Sydney University'\n];\nconst LICENSE: string[] = [\n  'Available', 'Not Available'\n];\nconst WRKRIGHTS: string[] = [\n  'Available', 'Not Available'\n];\nconst SKILLS: string[] = [\n  'Figma', 'Adobe Illustrator'\n];\n\n\n\n@Component({\n  selector: 'app-graduate-list',\n  templateUrl: './graduate-list.component.html',\n  styleUrls: ['./graduate-list.component.scss']\n})\nexport class GraduateListComponent implements AfterViewInit {\n  gradlist=[]\n\tdisplayedColumns: string[] = ['select', 'id', 'name', 'lname', 'email', 'company', 'location', 'wrkpref', 'availability','wrkrights', 'status', 'action'];\n\tdataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n\n  @ViewChild('smallModal') public smallModal: ModalDirective;\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\n\t@ViewChild(MatSort) sort: MatSort;\n  totalRecords: any;\n  delId: any;\n  event: any;\n  topPage: any;\n  sortedData: any;\n  search: any='';\n  filter: any='';\n  array: any[];\n  array1: any[];\n\n\tconstructor(private route:ActivatedRoute,private Service:TopgradserviceService,private _snackBar: MatSnackBar) { \n\t\t // Create 100 users\n\t\tconst users = Array.from({length: 50}, (_, k) => createNewUser(k + 1));\n\n\t\t// Assign the data to the data source for the table to render\n\t\tthis.dataSource = new MatTableDataSource(users);\n\t}\n\n\t ngAfterViewInit() {\n\t    this.dataSource.paginator = this.paginator;\n\t    this.dataSource.sort = this.sort;\n\n      \n\t  }\n\n\tngOnInit(): void {\n    this.search=''\n    this.graduatelist();\n    this.filter=''\n\t}\n\n  modal(id){\n    this.smallModal.show()\n    this.delId=id\n  }\n\n  deletegraduate(id){\n    var obj = {\n      deletedAt : true,\n      user_id: id\n    }\n    this.Service.deleteuser(obj).subscribe(res=>{\n      console.log(\"fgdgfdgfdfgdfgd\",res);\n      this.smallModal.hide()\n      if(res.code==200){\n        this._snackBar.open(\"User Deleted Successfully\",\"close\",{\n          duration: 2000\n        });\n        this.ngOnInit()\n      }\n    },err => {\n      console.log(err);\n      this._snackBar.open(\"Some Error Occued\",\"close\",{\n        duration: 2000})\n      })\n  }\n\n\n  graduatelist(){\n    console.log(\"khjhgjhgjhgjhghjghjgjhghjg\");\n    \n    var obj: any={\n    limit: 5,\n    offset: 0,\n    role: \"Graduate\",\n    search:this.search,\n    filter:this.filter\n    }\n    // if(this.search){\n    //   obj.search = this.search\n    // }\n    console.log(\"onnnn\", obj)\n    this.Service.gradlist(obj).subscribe(data => {\n    console.log(\"main data for users is ====\", data)\n    this.gradlist=data.data\n    this.totalRecords=data.length;\n    }, err => {\n    console.log(err.status)\n    if (err.status >= 404) {\n    console.log('Some error occured')\n    } else {\n    // this.toastr.error('Some error occured, please try again!!', 'Error')\n    console.log('Internet Connection Error')\n    }\n    })\n    }\n\n\tapplyFilter(filterValue) {\n   \n    this.search=filterValue.target.value\n    console.log(\"search\", this.search);\n    \n    console.log(\"after searchhhhh-00------------0=====\",this.event);\n\n    if(this.event){\n      console.log(\"after searchhhhh=====\",this.event);\n      \n      this.paginationOptionChange(this.event)\n    }\n    else{\n      this.graduatelist()\n\n    }\n\n\t }\n\n   selectfilter(e){\n     console.log(\"ddsfc\",e.target.value);\n     if(e.target.value== \"Work Preference\"){\n        console.log(\"blle blle\");\n        this.array=[{name:'Any', value:\"any\"},{name:'Job',value:\"job\"},{name:'Internship',value:\"internship\"}]\n        console.log(\"1\",this.array);\n        \n     }\n     if(e.target.value== \"Availability\"){\n        console.log(\"te shava shava\");\n        this.array=[{name:'Any', value:\"any\"},{name:'Part Time',value:\"part_time\"},{name:'Full Time',value:\"full_time\"}]\n        console.log(\"2\",this.array);\n     }\n     if(e.target.value== \"Work Rights\"){\n        console.log(\"nacho navho te kava kava\");\n        this.array=[{name:'Any', value:\"any\"},{name:'Citizen Permanent Resident',value:\"citizen_permanent_resident\"},{name:'Full Time Work Visa',value:\"full_time_work_visa\"},{name:'Student Visa',value:\"student_visa\"},{name:'Aboriginal Torres Straight Islander',value:\"aboriginal_torres_straight_islander\"}]\n        console.log(\"3\",this.array);\n     }\n     \n   }\n\n   selectsubfilter(e){\n    console.log(\"subfilter value\",e.target.value);\n    this.filter=e.target.value;\n    if(this.event){\n      console.log(\"after searchhhhh=====\",this.event);\n      \n      this.paginationOptionChange(this.event)\n    }\n    else{\n      console.log(\"fgddfgdfgdfgdfgdgfdfg\",this.filter);\n      \n      this.graduatelist()\n\n    }\n   }\n\n   paginationOptionChange(evt) {\n    this.event=evt\n    console.log(\"evthrm\", evt)\n    this.topPage = evt.pageIndex\n    console.log('rsawsfsdsf',this.topPage)\n    console.log(\"pagesize is======\",evt.pageSize);\n    \n   var obj:any = {\n    role: \"Graduate\",\n    search:this.search,\n    filter:this.filter,\n    limit: evt.pageSize,\n    offset: (evt.pageIndex*evt.pageSize)\n     }\n    //  if(this.search){\n    //   obj.search = this.search\n    // }\n    console.log(\"paginator obj==========\",obj);\n    \n     this.Service.gradlist(obj).subscribe(async data => {\n       console.log(\"Response of all the service listing>>>>>\", data);\n        this.gradlist=data.data,\n        this.sortedData=this.gradlist\n        this.totalRecords = data.count\n     })\n  }\n  getPageSizeOptions() {\n    return [5,10,50,100];\n  }\n\n\n  \n\n   /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n   /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserData): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n}\n\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ';\n  const email = EMAILS[Math.round(Math.random() * (EMAILS.length - 1))] + ' ';\n  const company = CREATION[Math.round(Math.random() * (CREATION.length - 1))] + ' ';\n  const location = LOCATION[Math.round(Math.random() * (LOCATION.length - 1))] + ' ';\n  const wrkpref = WRKPREF[Math.round(Math.random() * (WRKPREF.length - 1))] + ' ';\n  const availability = AVAILABILITY[Math.round(Math.random() * (AVAILABILITY.length - 1))] + ' ';\n  const education = EDUCATION[Math.round(Math.random() * (EDUCATION.length - 1))] + ' ';\n  const license = LICENSE[Math.round(Math.random() * (LICENSE.length - 1))] + ' ';\n  const wrkrights = WRKRIGHTS[Math.round(Math.random() * (WRKRIGHTS.length - 1))] + ' ';\n  const skills = SKILLS[Math.round(Math.random() * (SKILLS.length - 1))] + ' ';\n\n  return {\n    id: id.toString() + '.',\n    name: name,\n    email: email,\n    company: company,\n    lname: LNAME[Math.round(Math.random() * (LNAME.length - 1))],\n    location: location,\n    wrkpref: wrkpref,\n    availability: availability,\n    education: education,\n    license: license,\n    wrkrights: wrkrights,\n    skills: skills,\n\n  };\n}"]}