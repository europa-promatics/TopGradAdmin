{"version":3,"sources":["./src/app/views/jobs-management/jobs-management.component.scss","./src/app/views/jobs-management/jobs-management.module.ts","./src/app/views/jobs-management/jobs-management.component.ts","./src/app/views/jobs-management/jobs-management.component.html","./src/app/views/jobs-management/jobs-management-routing.module.ts"],"names":[],"mappings":"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","file":"views-jobs-management-jobs-management-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJqb2JzLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JobsManagementRoutingModule } from './jobs-management-routing.module';\nimport { JobsManagementComponent } from './jobs-management.component';\nimport { EditorModule } from '@tinymce/tinymce-angular';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgxDropzoneModule } from 'ngx-dropzone';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { BsModalRef, ModalModule } from 'ngx-bootstrap/modal';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { MatSortModule } from '@angular/material/sort';\n\n\n@NgModule({\n  declarations: [\n    JobsManagementComponent\n  ],\n  imports: [\n    CommonModule,\n    EditorModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    NgxDropzoneModule,\n    FormsModule,\n    ReactiveFormsModule,CommonModule,\n    EditorModule,\n    MatSlideToggleModule,\n    MatIconModule,\n    NgxDropzoneModule,\n    FormsModule,\n    MatSortModule,\n    ReactiveFormsModule,\n    // MatFormFieldModule,\n    MatPaginatorModule,\n    BsDropdownModule.forRoot() ,\n    ModalModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatProgressBarModule,\n    MatMenuModule,\n    MatInputModule,\n    JobsManagementRoutingModule,\n    MatCheckboxModule\n  ],\n  providers: [BsModalRef]\n})\nexport class JobsManagementModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { TopgradserviceService } from '../../topgradservice.service';\nimport { FormBuilder } from '@angular/forms';\n\nexport interface UserData {\n  id: string;\n  postedby: string;\n  deadline: string;\n  worktype: string;\n  contracttype: string;\n  jobtitle: string;\n  // applications: string;\n  first_name:string;\n  lastName:string\n}\n\n/** Constants used to fill up our data base. */\nconst DEADLINE: string[] = [\n  '08-09-2021', '07-09-2021', '01-09-2021', '08-09-2021', '08-09-2021', '08-09-2021', '08-09-2021', '08-09-2021'\n];\nconst POSTEDBY: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\nconst FIRSTNAME: string[] = [\n];\nconst LASTNAME: string[] = [\n];\nconst WORKTYPE: string[] = [\n  'Employment', 'Employment', 'Internship', 'Employment', 'Employment', 'Employment', 'Employment', 'Employment', 'Internship'\n];\nconst CONTRACT: string[] = [\n  'Full-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time',\n  'Full-Time', 'Full-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time', 'Part-Time'\n];\nconst TITLE: string[] = [\n  'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'Promatics',\n  'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'UI/UX Designer', 'Promatics', 'Promatics'\n];\n// const APPLICATIONS: string[] = [\n//   '23', '33', '77', '34', '3', '56', '56', '56', '56', '78',\n//   '78', '78', '56', '56', '56', '56', '56', '78', '78'\n// ];\n\n\n@Component({\n  selector: 'app-jobs-management',\n  templateUrl: './jobs-management.component.html',\n  styleUrls: ['./jobs-management.component.scss']\n})\nexport class JobsManagementComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['select', 'id', 'postedby', 'jobtitle', 'worktype', 'contracttype', 'deadline', 'status', /*'applications',*/ 'action'];\n  dataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n  \n  @ViewChild('smallModal') public smallModal: ModalDirective;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  totalRecords: any;\n  jobList1: any;\n  sortedData: [];\n  topPage: any;\n  search: any=' ';\n  event: any;\n  filterValue: string;\n  item_id: any;\n  id: any;\n  contract_type: any;\n  data: any;\n\n  constructor(private Service: TopgradserviceService,private fb: FormBuilder) {\n  \n    const users : UserData[] = [];\n    for (let i =1; i <= 100; i++) { users.push(createNewUser(i)); };//paginator...........\n    \n    this.dataSource = new MatTableDataSource(users);\n\n    this.sortedData = this.jobList1?.slice();//sorting........\n  }\n\n\n\n  // sorting ----------------\n  sortData(sort: Sort) {\n    const data = this.jobList1.slice();\n    console.log(\"dfagfdtyewdtuyety\",data);\n    \n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active){\n        case 'id':\n          return compare(a.id?.toUpperCase(), b.id?.toUpperCase(), isAsc);\n        case 'first_name':\n          return compare(a.first_name?.toUpperCase(), b.first_name?.toUpperCase(), isAsc);\n        case 'last_name':\n          return compare(a.last_name?.toUpperCase(), b.last_name?.toUpperCase(), isAsc);\n        case 'work_type':\n          return compare(a.work_type?.toUpperCase(), b.work_type?.toUpperCase(), isAsc);\n        case 'contract_type':\n          return compare(a.contract_type?.toUpperCase(), b.contract_type?.toUpperCase(), isAsc);\n        case 'job_title':\n          return compare(a.job_title?.toUpperCase(), b.job_title?.toUpperCase(), isAsc);\n        case 'deadline_date':\n          return compare(a.deadline_date?.toUpperCase(), b.deadline_date?.toUpperCase(), isAsc);\n      \n        default:\n          return 0;\n      }\n    });\n  }\n  \n\n  openSnackBar() {\n    this.id = this.id\n  }\n\n ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;//paginator..............\n    this.dataSource.sort = this.sort;//sorting..........\n  }\n\n  ngOnInit(): void {\n    this.jobListing();  //listinggg\n    this.search=\"\";   // filter\n  }\n  \n\n  // Paginator -----------\n  paginationOptionChange(evt) {\n    this.event=evt\n    this.topPage = evt.pageIndex\n   var obj:any = {\n      search: this.search,\n      limit: evt.pageSize,\n       offset:  (evt.pageIndex * evt.pageSize)\n     }\n     if(this.search){\n      obj.search = this.search\n    }\n     this.Service.jobManagementList(obj).subscribe(async res => {\n       console.log(\"Response of all the service listing>>>>>\", res);\n        this.jobList1=res.data.records\n        for(let i=0; i<this.jobList1?.length; i++){\n          if(this.jobList1[i].contract_type=='temp_contract'){\n            let cType= \"Temp/Contract\"\n            this.jobList1[i].cType=cType\n          }\n          else if(this.jobList1[i].contract_type=='full_time'){\n            let cType ='Full Time'\n            this.jobList1[i].cType=cType\n          }\n          else if(this.jobList1[i].contract_type=='part_time'){\n          let cType ='Part Time'\n            this.jobList1[i].cType=cType\n          }\n          else if(this.jobList1[i].contract_type=='casual'){\n            let cType ='Casual'\n            this.jobList1[i].cType=cType\n          }\n        }\n        this.sortedData=this.jobList1\n        this.totalRecords = res.data.count\n     })\n  }\n  getPageSizeOptions() {\n    return [5,10,50,100];\n  }\n\n\n// listing-------------\n  jobListing() {\n    var obj: any = {\n      limit: 10,\n      offset: 0,\n      search: this.search,\n    }\n    if (this.search) {\n      obj.search = this.search\n    }\n  \n    this.Service.jobManagementList(obj).subscribe(res => {\n      console.log(\"Response==========\", res);\n      this.jobList1 = res.data.records\n      \n      for(let i=0; i<this.jobList1?.length; i++){\n        if(this.jobList1[i].contract_type=='temp_contract'){\n          let cType= \"Temp/Contract\"\n          this.jobList1[i].cType=cType\n        }\n        else if(this.jobList1[i].contract_type=='full_time'){\n          let cType ='Full Time'\n          this.jobList1[i].cType=cType\n        }\n        else if(this.jobList1[i].contract_type=='part_time'){\n        let cType ='Part Time'\n          this.jobList1[i].cType=cType\n        }\n        else if(this.jobList1[i].contract_type=='casual'){\n          let cType ='Casual'\n          this.jobList1[i].cType=cType\n        }\n      }\n      this.totalRecords = res.data.count\n      console.log(\"job List===>\",this.jobList1)\n\n      this.sortedData = this.jobList1\n      console.log(\"job sorted List===>\",this.sortedData)\n    })\n    console.log(\"Object==========\", obj);\n  }\n\n\n// filter------------\n  applyFilter(filterValue) {\n    this.search = filterValue.target.value\n    if (this.event) {\n      this.paginationOptionChange(this.event)\n    }\n    else {\n      this.jobListing()\n      \n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n  \n      }\n    }\n\n  }\n\nview_id(){\n  \n}\n\n\ndelete_id(id){\n  this.item_id=id\n  this.smallModal.show()\n  console.log(\"job management===>>>\",this.item_id);\n  this.ngOnInit()\n}\njobManageDelete(id){\n  var obj={\n    employer_job_id:id\n  }\n  console.log(\"deleted industry\",obj);\n  this.smallModal.hide()\n  this.Service.jobManagementDelete(obj).subscribe(res=>{\n    console.log(\"Response==========\",res);\n    this.Service.showMessage({ message: \"Deleted Successfully\" })\n    this.ngOnInit()\n    this.smallModal.hide()\n  })\n}\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n   /** The label for the checkbox on the passed row */\n\n  checkboxLabel(row?: UserData): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n}\n\nfunction createNewUser(id: number): UserData {\n  const postedby = POSTEDBY[Math.round(Math.random() * (POSTEDBY.length - 1))] + ' ';\n  const first_name = FIRSTNAME[Math.round(Math.random() * (FIRSTNAME.length - 1))] + ' ';\n  const lastName = LASTNAME[Math.round(Math.random() * (LASTNAME.length - 1))] + ' ';\n  const worktype = WORKTYPE[Math.round(Math.random() * (WORKTYPE.length - 1))] + ' ';\n  const contracttype = CONTRACT[Math.round(Math.random() * (CONTRACT.length - 1))] + ' ';\n  const jobtitle = TITLE[Math.round(Math.random() * (TITLE.length - 1))] + ' ';\n  // const applications = APPLICATIONS[Math.round(Math.random() * (APPLICATIONS.length - 1))] + ' ';\n\n  return {\n    id: id.toString() + '.',\n    postedby: postedby,\n    first_name: first_name,\n    lastName:lastName,\n    worktype: worktype,\n    contracttype: contracttype,\n    jobtitle: jobtitle,\n    // applications: applications,\n    deadline: DEADLINE[Math.round(Math.random() * (DEADLINE.length - 1))],\n\n  };\n}\n\n\n// sorting..........\nfunction compare(a: string, b: string, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n","export default \"<section class=\\\"jobs-mngmnt\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <mat-form-field appearance=\\\"standard\\\">\\n          <mat-label>Filter</mat-label>\\n          <input matInput (keyup)=\\\"applyFilter($event)\\\"  [(ngModel)]=\\\"search \\\" placeholder=\\\"Ex. Mia\\\" class=\\\"filter_input\\\" #input>\\n        </mat-form-field>\\n\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table mat-table [dataSource]=\\\"sortedData\\\" matSort (matSortChange)=\\\"sortData($event)\\\">\\n              <!-- Checkbox Column -->\\n              <ng-container matColumnDef=\\\"select\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                    [aria-label]=\\\"checkboxLabel()\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                    [aria-label]=\\\"checkboxLabel(row)\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </td>\\n              </ng-container>\\n              <!-- ID Column -->\\n              <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"id\\\"> S.No </th>\\n                <td mat-cell *matCellDef=\\\"let row; let i=index\\\"> {{i+1}}  </td>\\n              </ng-container>\\n\\n              <!-- postedby Column -->\\n              <ng-container matColumnDef=\\\"postedby\\\">\\n                <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"first_name\\\">Employer Name </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.user_detail.first_name}} {{row.user_detail.last_name}} </td>\\n              </ng-container>\\n              <!-- worktype Column -->\\n              <ng-container matColumnDef=\\\"worktype\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"work_type\\\">Work Type</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.work_type}} </td>\\n              </ng-container>\\n              <!-- Company Column -->\\n              <ng-container matColumnDef=\\\"contracttype\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"contract_type\\\">Contract Type</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.cType}} </td>\\n                <!-- <ng-container *ngIf=\\\"row?.contract_type == temp_contract\\\"> \\n                  <td mat-cell *matCellDef=\\\"let row\\\" > Temp/Contract </td> \\n                </ng-container>\\n                <ng-container *ngIf=\\\"row?.contract_type == full_time\\\"> \\n                  <td mat-cell *matCellDef=\\\"let row\\\" >Full Time </td> \\n                </ng-container>\\n                <ng-container *ngIf=\\\"row?.contract_type == part_time\\\"> \\n                  <td mat-cell *matCellDef=\\\"let row\\\" > Part Time </td> \\n                </ng-container>\\n                <ng-container *ngIf=\\\"row?.contract_type == casual\\\"> \\n                  <td mat-cell *matCellDef=\\\"let row\\\" > Casual </td> \\n                </ng-container> -->\\n              </ng-container>\\n\\n               <!-- Job title Column -->\\n              <ng-container matColumnDef=\\\"jobtitle\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"job_title\\\">Job Title</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.job_title}} </td>\\n              </ng-container>\\n             \\n              <!-- deadline Column -->\\n              <ng-container matColumnDef=\\\"deadline\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"deadline_date\\\"> Deadline </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.deadline_date | date:\\\"MM/dd/yyyy \\\"}} </td>\\n              </ng-container>\\n              <!-- status column -->\\n              <ng-container matColumnDef=\\\"status\\\">\\n                <th mat-header-cell *matHeaderCellDef> Status </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                     <mat-slide-toggle [checked]=\\\"row.user_detail.status=='active'?true:false\\\"></mat-slide-toggle>\\n                   </td>\\n              </ng-container>\\n              <!-- status column -->\\n\\n\\n              <!-- <ng-container matColumnDef=\\\"applications\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Applicants </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"><a routerLink=\\\"/applicantsManagement\\\"> {{row.applications}}</a> </td>\\n              </ng-container> -->\\n\\n\\n               <!-- Action column -->\\n               <ng-container matColumnDef=\\\"action\\\">\\n                <th mat-header-cell *matHeaderCellDef> Action </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"td-btn\\\">\\n                      <mat-icon>more_vert</mat-icon>\\n                    </button>\\n                    <mat-menu #menu=\\\"matMenu\\\" class=\\\"td-menu\\\">\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"/viewJob/{{row._id}}\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\" (click)=\\\"view_id(row._id)\\\">visibility</mat-icon>\\n                        <span>View</span>\\n                      </a>\\n                      <!-- <a mat-menu-item class=\\\"\\\" routerLink=\\\"/editJob\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">edit</mat-icon>\\n                        <span>Edit</span>\\n                      </a> -->\\n                      <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"delete_id(row._id)\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\" >delete</mat-icon>\\n                        <span>Delete</span>\\n                      </a>\\n                    </mat-menu>\\n                </td>\\n              </ng-container>\\n\\n              <!-- Progress Column -->\\n              <!-- <ng-container matColumnDef=\\\"progress\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\n              </ng-container> -->\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n              <!-- Row shown when there is no matching data. -->\\n              <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n              </tr>\\n            </table>\\n          </div>\\n          <mat-paginator [length]=\\\"totalRecords\\\" [pageIndex]=\\\"topPage\\\" [pageSize]=\\\"limit\\\"\\n          [pageSizeOptions]=\\\"getPageSizeOptions()\\\" (page)=\\\"paginationOptionChange($event)\\\" showFirstLastButtons>\\n        </mat-paginator>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n<!-- Modal -->\\n<div bsModal #smallModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"smallModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"smallModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n            <img src=\\\"assets/img/Group 225.png\\\">\\n          </span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete the selected Job?</p>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"smallModal.hide()\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"jobManageDelete(this.item_id)\\\" (click)=\\\"openSnackBar()\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { JobsManagementComponent } from './jobs-management.component';\n\nconst routes: Routes = [\n\n\t{\n\t\tpath: '',\n\t\tcomponent: JobsManagementComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class JobsManagementRoutingModule { }\n"],"sourceRoot":"webpack:///"}