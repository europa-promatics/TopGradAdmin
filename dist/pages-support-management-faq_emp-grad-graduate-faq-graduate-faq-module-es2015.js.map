{"version":3,"sources":["./src/app/pages/support-management/faq_emp-grad/graduate-faq/graduate-faq.component.scss","./src/app/pages/support-management/faq_emp-grad/graduate-faq/graduate-faq.component.ts","./src/app/pages/support-management/faq_emp-grad/graduate-faq/graduate-faq-routing.module.ts","./src/app/pages/support-management/faq_emp-grad/graduate-faq/graduate-faq.module.ts","./src/app/pages/support-management/faq_emp-grad/graduate-faq/graduate-faq.component.html"],"names":[],"mappings":"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","file":"pages-support-management-faq_emp-grad-graduate-faq-graduate-faq-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJncmFkdWF0ZS1mYXEuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { FormBuilder } from '@angular/forms';\nimport { TopgradserviceService } from '../../../../topgradservice.service';\n\n\nexport interface UserData {\n  id: string;\n  title: string;\n  category: string;\n  description: string;\n}\n\n/** Constants used to fill up our data base. */\n\nconst TITLE: string[] = [\n  'How do I keep track of a b c?', 'Lorem ipsum dolor sit?'\n];\n\nconst CATEGORY: string[] = [\n  'General', 'My Account', 'Jobs', 'Permissions & Privacy', \n];\n\nconst DESCRIPTION: string[] = [\n  'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', \n];\n\n@Component({\n  selector: 'app-graduate-faq',\n  templateUrl: './graduate-faq.component.html',\n  styleUrls: ['./graduate-faq.component.scss']\n})\nexport class GraduateFaqComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'title', 'description', 'category', 'action'];\n  dataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n    \n  @ViewChild('smallModal') public smallModal: ModalDirective;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  GraduateFaqList: any;\n  totalRecords: any;\n  topPage: any;\n  sortedData: any;\n  search: string;\n  filterValue: string;\n  item_id: any;\n\n  constructor( private Service:TopgradserviceService,  private fb : FormBuilder) {\n\n    const users : UserData[] = [];\n    for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); };\n    this.dataSource = new MatTableDataSource(users);\n    this.sortedData = this.GraduateFaqList?.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.GraduateFaqList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'id':\n        return compare(a.id, b.id, isAsc);\n        case 'title':\n        return compare(a.id, b.id, isAsc);\n        case 'category':\n        return compare(a.id, b.id, isAsc);\n        case 'description':\n        return compare(a.id, b.id, isAsc);\n        default:\n        return 0;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  ngOnInit(): void {\n    // alert(\"hgsxcjhs\");\n    this.faqList();\n  }\n  paginationOptionChange(evt) {\n    console.log(\"evthrm\", evt)\n    this.topPage = evt.pageIndex\n    console.log('rsawsfsdsf',this.topPage)\n    var obj:any = {\n      user_type:'graduate',\n      limit: evt.pageSize,\n      offset:  (evt.pageIndex * evt.pageSize)\n    }\n    if(this.search){\n      obj.search = this.search\n     \n    }\n    this.Service.faqList(obj).subscribe(async data => {\n      console.log(\"Response of all the service listing>>>>>\", data);\n      this.GraduateFaqList=data.data,\n      this.sortedData=this.GraduateFaqList\n      this.totalRecords = data.count\n    })\n  }\n  getPageSizeOptions() {\n    return [5,10,25,50,100];\n    \n  }\n  \n  faqList(){\n    console.log(\"javascriptt========\");\n    var obj: any={\n      user_type:'graduate',\n      limit:5,\n      offset:0,\n    }\n    if(this.search){\n      obj.search = this.search\n     \n    }\n    this.Service.faqList(obj).subscribe(res=>{\n        console.log(\"Response==========\",res);\n        this.GraduateFaqList=res.data\n        this.sortedData=this.GraduateFaqList\n        this.totalRecords = res.count\n      })\n      console.log(\"Object==========\",obj);\n    }\n\n\n    applyFilter(filterValue: string ) {\n      this.faqList()\n    }\n\n    delete_id(id){\n      this.item_id=id\n      this.smallModal.show()\n\n    }\n    faqDelete(id){\n      var obj={\n        faq_id:id\n      }\n      console.log(\"adsdsadsadsds\",obj);\n      this.smallModal.hide()\n      this.Service.faqDelete(obj).subscribe(res=>{\n        console.log(\"Response==========\",res);\n        this.ngOnInit()\n        this.smallModal.hide()\n      })\n    }\n\n}\n\nfunction createNewUser(id: number): UserData {\n  const title = TITLE[Math.round(Math.random() * (TITLE.length - 1))] + ' ';\n  const category = CATEGORY[Math.round(Math.random() * (CATEGORY.length - 1))] + ' ';\n  const description = DESCRIPTION[Math.round(Math.random() * (DESCRIPTION.length - 1))] + ' ';\n  \n\n  return {\n    id: id.toString() + '.',\n    title: title,\n    category: category,\n    description: description,\n\n  };\n}\n\nfunction compare(a: string, b: string, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GraduateFaqComponent } from './graduate-faq.component';\n\nconst routes: Routes = [\n  {\n\t\tpath: '',\n\t\tcomponent: GraduateFaqComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GraduateFaqRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GraduateFaqRoutingModule } from './graduate-faq-routing.module';\nimport { GraduateFaqComponent } from './graduate-faq.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n// import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n\n\n// @Pipe({\n//   name: 'fieldSum',\n//   pure: false\n// })\n// @Injectable()\n// export class FieldSumPipe implements PipeTransform {\n//   transform(items: any[], attr: string): number {\n//     return items.reduce((a, b) => a + b[attr], 0);\n//   }\n// }\n\n@NgModule({\n  declarations: [\n    GraduateFaqComponent\n  ],\n  imports: [\n    CommonModule,\n    GraduateFaqRoutingModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatTableModule,\n    MatIconModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatInputModule,\n    MatMenuModule,\n    ModalModule,\n    BsDropdownModule.forRoot() \n  ],\n  providers :[\n    BsModalRef\n  ]\n})\nexport class GraduateFaqModule { }\n","export default \"<section class=\\\"jobs-mngmnt\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <mat-progress-bar mode=\\\"indeterminate\\\" value=\\\"100\\\" *ngIf=\\\"!sortedData\\\"></mat-progress-bar>\\n          <div class=\\\"catgry-tools d-flex justify-content-between align-items-center\\\">\\n            <mat-form-field appearance=\\\"standard\\\">\\n              <mat-label>Filter</mat-label>\\n              <input matInput (keyup)=\\\"applyFilter($event)\\\" [(ngModel)]=\\\"search \\\" placeholder=\\\"Ex. Mia\\\" class=\\\"filter_input\\\" #input>\\n            </mat-form-field>\\n            <span class=\\\"add-categry\\\">\\n              <a class=\\\"btn-primary btn\\\" routerLink=\\\"/graduate-add-faq\\\">Add FAQ</a>\\n            </span>\\n          </div>\\n  \\n          <div class=\\\"mat-elevation-z8\\\">\\n            <div class=\\\"table-responsive\\\">\\n              <table mat-table [dataSource]=\\\"sortedData\\\"  matSort (matSortChange)=\\\"sortData($event)\\\">\\n  \\n                <!-- ID Column -->\\n                <ng-container matColumnDef=\\\"id\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"id\\\"> S.No </th>\\n                  <td mat-cell *matCellDef=\\\"let row; let i=index\\\"> {{i+1}} </td>\\n                </ng-container>\\n  \\n                <!-- firstName Column -->\\n                <ng-container matColumnDef=\\\"title\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"title\\\">Title </th>\\n                  <td mat-cell *matCellDef=\\\"let row \\\"> {{row.title }} </td>\\n                </ng-container>\\n                <!-- Company Column -->\\n                <ng-container matColumnDef=\\\"category\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"category\\\">Category</th>\\n                  <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.category_data?.name}} </td>\\n                </ng-container>\\n               \\n                <!-- enquiry Column -->\\n                <ng-container matColumnDef=\\\"description\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"description\\\"> Description </th>\\n                  <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"td-width\\\" [innerHTML]=\\\"row.description\\\"></td>\\n                </ng-container>\\n  \\n                 <!-- Action column -->\\n                 <ng-container matColumnDef=\\\"action\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Action </th>\\n                  <td mat-cell *matCellDef=\\\"let row\\\">\\n                      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"td-btn\\\">\\n                        <mat-icon>more_vert</mat-icon>\\n                      </button>\\n                      <mat-menu #menu=\\\"matMenu\\\" class=\\\"td-menu\\\">\\n                          <a mat-menu-item class=\\\"\\\" routerLink=\\\"/view-faq/{{row._id}}\\\">\\n                              <mat-icon class=\\\"material-icons-outlined\\\" (click)=\\\"view_id(row._id)\\\">visibility</mat-icon>\\n                              <span>View</span>\\n                          </a>\\n                          <a mat-menu-item class=\\\"\\\" routerLink=\\\"/graduate-edit-faq/{{row._id}}\\\"  >\\n                              <mat-icon class=\\\"material-icons-outlined\\\" (click)=\\\"edit_faq(row._id)\\\">edit</mat-icon>\\n                              <span>Edit</span>\\n                          </a>\\n                          \\n                          <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\"  (click)=\\\"delete_id(row._id)\\\">\\n                              <mat-icon class=\\\"material-icons-outlined\\\">delete</mat-icon>\\n                              <span>Delete</span>\\n                          </a>\\n                      </mat-menu>\\n                  </td>\\n                </ng-container>\\n  \\n         \\n  \\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  \\n                <!-- Row shown when there is no matching data. -->\\n                <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n                </tr>\\n              </table>\\n            </div>\\n              <mat-paginator [length]=\\\"totalRecords\\\" [pageIndex]=\\\"topPage\\\" [pageSize]=\\\"limit\\\"\\n                [pageSizeOptions]=\\\"getPageSizeOptions()\\\" (page)=\\\"paginationOptionChange($event)\\\" showFirstLastButtons>\\n              </mat-paginator>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </section>\\n  \\n  <!-- Modal -->\\n  <div bsModal #smallModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"smallModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"smallModal.hide()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n              <img src=\\\"assets/img/Group 225.png\\\">\\n            </span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p>Are you sure you want to delete the selected FAQ?</p>\\n        </div>\\n        <div class=\\\"modal-footer justify-content-center\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"smallModal.hide()\\\">No</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"  (click)=\\\"faqDelete(this.item_id)\\\">Yes</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \\n  \\n  \";"],"sourceRoot":"webpack:///"}