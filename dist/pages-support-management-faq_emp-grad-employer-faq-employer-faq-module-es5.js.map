{"version":3,"sources":["webpack:///src/app/pages/support-management/faq_emp-grad/employer-faq/employer-faq.component.scss","webpack:///src/app/pages/support-management/faq_emp-grad/employer-faq/employer-faq-routing.module.ts","webpack:///src/app/pages/support-management/faq_emp-grad/employer-faq/employer-faq.module.ts","webpack:///src/app/pages/support-management/faq_emp-grad/employer-faq/employer-faq.component.ts","webpack:///src/app/pages/support-management/faq_emp-grad/employer-faq/employer-faq.component.html"],"names":["routes","path","component","EmployerFaqRoutingModule","imports","forChild","exports","EmployerFaqModule","declarations","forRoot","providers","TITLE","CATEGORY","DESCRIPTION","EmployerFaqComponent","Service","fb","displayedColumns","selection","search","users","i","push","createNewUser","dataSource","sortedData","EmployerFaqList","slice","sort","data","active","direction","a","b","isAsc","compare","id","paginator","faqList","evt","console","log","topPage","pageIndex","obj","user_type","limit","pageSize","offset","subscribe","totalRecords","count","res","filterValue","item_id","smallModal","show","ngOnInit","faq_id","hide","faqDelete","selector","template","title","Math","round","random","length","category","description","toString"],"mappings":";;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIf,UAAMA,MAAM,GAAW,CACtB;AACCC,YAAI,EAAE,EADP;AAECC,iBAAS,EAAE;AAFZ,OADsB,CAAvB;;UAWaC,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DAJpC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC0BAI,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,6DAtB7B,+DAAS;AACRC,oBAAY,EAAE,CACZ,4EADY,CADN;AAIRJ,eAAO,EAAE,CACP,4DADO,EAEP,qFAFO,EAGP,8EAHO,EAIP,+EAJO,EAKP,kEALO,EAMP,sEANO,EAOP,0DAPO,EAQP,oEARO,EASP,qEATO,EAUP,uEAVO,EAWP,gEAXO,EAYP,yEAAiBK,OAAjB,EAZO,CAJD;AAkBRC,iBAAS,EAAE,CACT,+DADS;AAlBH,OAAT,CAsB6B,GAAjBH,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBb;;;AAEA,UAAMI,KAAK,GAAa,CACtB,+BADsB,EACW,wBADX,CAAxB,C,CAGA;AACA;AACA;AACA;;AACA,UAAMC,QAAQ,GAAa,CACzB,SADyB,EACd,YADc,EACA,MADA,EACQ,uBADR,CAA3B;AAIA,UAAMC,WAAW,GAAa,CAC5B,6CAD4B,EACmB,6CADnB,EACkE,6CADlE,EACiH,6CADjH,CAA9B;;UASaC,oBAAoB;AAgB/B,sCAAqBC,OAArB,EAA6DC,EAA7D,EAA+E;AAAA;;;;AAA1D,eAAAD,OAAA,GAAAA,OAAA;AAAwC,eAAAC,EAAA,GAAAA,EAAA;AAf7D,eAAAC,gBAAA,GAA6B,CAAC,IAAD,EAAO,OAAP,EAAgB,aAAhB,EAA+B,UAA/B,EAA2C,QAA3C,CAA7B;AAEA,eAAAC,SAAA,GAAY,IAAI,uEAAJ,CAA6B,IAA7B,EAAmC,EAAnC,CAAZ;AASA,eAAAC,MAAA,GAAY,EAAZ;AAQE,cAAMC,KAAK,GAAgB,EAA3B;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAAED,iBAAK,CAACE,IAAN,CAAWC,aAAa,CAACF,CAAD,CAAxB;AAA+B;;AAAA;AAChE,eAAKG,UAAL,GAAkB,IAAI,0EAAJ,CAAuBJ,KAAvB,CAAlB;AACA,eAAKK,UAAL,GAAkB,CAAH,KAAG,KAAKC,eAAL,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,KAAF,EAAtC;AACD;;AAxB8B;AAAA;AAAA,iBA0B/B,kBAASC,IAAT,EAAqB;AACnB,gBAAMC,IAAI,GAAG,KAAKH,eAAL,CAAqBC,KAArB,EAAb;;AACA,gBAAI,CAACC,IAAI,CAACE,MAAN,IAAgBF,IAAI,CAACG,SAAL,KAAmB,EAAvC,EAA2C;AACzC,mBAAKN,UAAL,GAAkBI,IAAlB;AACA;AACD;;AAED,iBAAKJ,UAAL,GAAkBI,IAAI,CAACD,IAAL,CAAU,UAACI,CAAD,EAAIC,CAAJ,EAAU;AACpC,kBAAMC,KAAK,GAAGN,IAAI,CAACG,SAAL,KAAmB,KAAjC;;AACA,sBAAQH,IAAI,CAACE,MAAb;AACE,qBAAK,IAAL;AACA,yBAAOK,OAAO,CAACH,CAAC,CAACI,EAAH,EAAOH,CAAC,CAACG,EAAT,EAAaF,KAAb,CAAd;;AACA,qBAAK,OAAL;AACA,yBAAOC,OAAO,CAACH,CAAC,CAACI,EAAH,EAAOH,CAAC,CAACG,EAAT,EAAaF,KAAb,CAAd;;AACA,qBAAK,UAAL;AACA,yBAAOC,OAAO,CAACH,CAAC,CAACI,EAAH,EAAOH,CAAC,CAACG,EAAT,EAAaF,KAAb,CAAd;;AACA,qBAAK,aAAL;AACA,yBAAOC,OAAO,CAACH,CAAC,CAACI,EAAH,EAAOH,CAAC,CAACG,EAAT,EAAaF,KAAb,CAAd;;AACA;AACA,yBAAO,CAAP;AAVF;AAYD,aAdiB,CAAlB;AAeD;AAhD8B;AAAA;AAAA,iBAiD/B,2BAAkB;AAChB,iBAAKV,UAAL,CAAgBa,SAAhB,GAA4B,KAAKA,SAAjC;AACA,iBAAKb,UAAL,CAAgBI,IAAhB,GAAuB,KAAKA,IAA5B;AACD;AApD8B;AAAA;AAAA,iBAqD/B,oBAAQ;AACN,iBAAKU,OAAL;AACD;AAvD8B;AAAA;AAAA,iBAwD/B,gCAAuBC,GAAvB,EAA4B;AAAA;;AAC1BC,mBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACA,iBAAKG,OAAL,GAAeH,GAAG,CAACI,SAAnB;AACAH,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB,KAAKC,OAA9B;AACA,gBAAIE,GAAG,GAAO;AACZC,uBAAS,EAAC,UADE;AAEZC,mBAAK,EAAEP,GAAG,CAACQ,QAFC;AAGZC,oBAAM,EAAIT,GAAG,CAACI,SAAJ,GAAgBJ,GAAG,CAACQ;AAHlB,aAAd;;AAKA,gBAAG,KAAK5B,MAAR,EAAe;AACbyB,iBAAG,CAACzB,MAAJ,GAAa,KAAKA,MAAlB;AACD;;AACD,iBAAKJ,OAAL,CAAauB,OAAb,CAAqBM,GAArB,EAA0BK,SAA1B,CAAoC,UAAMpB,IAAN;AAAA,qBAAc;AAAA;AAAA;AAAA;AAAA;AAChDW,+BAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDZ,IAAxD;AACA,6BAAKH,eAAL,GAAqBG,IAAI,CAACA,IAA1B,EACA,KAAKJ,UAAL,GAAgB,KAAKC,eADrB;AAEA,6BAAKwB,YAAL,GAAoBrB,IAAI,CAACsB,KAAzB;;AAJgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAd;AAAA,aAApC;AAMD;AA1E8B;AAAA;AAAA,iBA2E/B,8BAAqB;AACnB,mBAAO,CAAC,CAAD,EAAG,EAAH,EAAM,EAAN,EAAS,EAAT,EAAY,GAAZ,CAAP;AACD;AA7E8B;AAAA;AAAA,iBA8E/B,mBAAO;AAAA;;AACLX,mBAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,gBAAIG,GAAG,GAAM;AACXC,uBAAS,EAAC,UADC;AAEXC,mBAAK,EAAC,CAFK;AAGXE,oBAAM,EAAC;AAHI,aAAb;;AAKA,gBAAG,KAAK7B,MAAR,EAAe;AACbyB,iBAAG,CAACzB,MAAJ,GAAa,KAAKA,MAAlB;AACD;;AACD,iBAAKJ,OAAL,CAAauB,OAAb,CAAqBM,GAArB,EAA0BK,SAA1B,CAAoC,UAAAG,GAAG,EAAE;AACrCZ,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCW,GAAjC;AACA,oBAAI,CAAC1B,eAAL,GAAqB0B,GAAG,CAACvB,IAAzB;AACA,oBAAI,CAACJ,UAAL,GAAgB,MAAI,CAACC,eAArB;AACA,oBAAI,CAACwB,YAAL,GAAoBE,GAAG,CAACD,KAAxB;AACD,aALH;AAMEX,mBAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BG,GAA/B;AACD;AA/F4B;AAAA;AAAA,iBAkG7B,qBAAYS,WAAZ,EAA+B;AAC7Bb,mBAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKtB,MAAhC;AACA,iBAAKmB,OAAL;AACD;AArG4B;AAAA;AAAA,iBAuG7B,mBAAUF,EAAV,EAAY;AACV,iBAAKkB,OAAL,GAAalB,EAAb;AACA,iBAAKmB,UAAL,CAAgBC,IAAhB;AACAhB,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKa,OAAjC;AACA,iBAAKG,QAAL;AACD;AA5G4B;AAAA;AAAA,iBA6G7B,mBAAUrB,EAAV,EAAY;AAAA;;AACV,gBAAIQ,GAAG,GAAC;AACNc,oBAAM,EAACtB;AADD,aAAR;AAGAI,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BG,GAA5B;AACA,iBAAKW,UAAL,CAAgBI,IAAhB;AACA,iBAAK5C,OAAL,CAAa6C,SAAb,CAAuBhB,GAAvB,EAA4BK,SAA5B,CAAsC,UAAAG,GAAG,EAAE;AACzCZ,qBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCW,GAAjC;;AACA,oBAAI,CAACK,QAAL;;AACA,oBAAI,CAACF,UAAL,CAAgBI,IAAhB;AACD,aAJD;AAKD;AAxH4B;;AAAA;AAAA,S;;;;gBA/BxB;;gBADA;;;;;;gBAqCN,uD;AAAS,iBAAC,YAAD;;;gBACT,uD;AAAS,iBAAC,wEAAD;;;gBACT,uD;AAAS,iBAAC,8DAAD;;;AAPC7C,0BAAoB,6DALhC,gEAAU;AACT+C,gBAAQ,EAAE,kBADD;AAETC,gBAAQ,EAAR,+EAFS;;AAAA,OAAV,CAKgC,E,+EAgBF,8E,EAAqC,0D,EAhBnC,GAApBhD,oBAAoB,CAApB;;AA4Hb,eAASS,aAAT,CAAuBa,EAAvB,EAAiC;AAC/B,YAAM2B,KAAK,GAAGpD,KAAK,CAACqD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBvD,KAAK,CAACwD,MAAN,GAAe,CAAhC,CAAX,CAAD,CAAL,GAAwD,GAAtE;AACA,YAAMC,QAAQ,GAAGxD,QAAQ,CAACoD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBtD,QAAQ,CAACuD,MAAT,GAAkB,CAAnC,CAAX,CAAD,CAAR,GAA8D,GAA/E;AACA,YAAME,WAAW,GAAGxD,WAAW,CAACmD,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBrD,WAAW,CAACsD,MAAZ,GAAqB,CAAtC,CAAX,CAAD,CAAX,GAAoE,GAAxF;AAGA,eAAO;AACL/B,YAAE,EAAEA,EAAE,CAACkC,QAAH,KAAgB,GADf;AAELP,eAAK,EAAEA,KAFF;AAGLK,kBAAQ,EAAEA,QAHL;AAILC,qBAAW,EAAEA;AAJR,SAAP;AAOD;;AAED,eAASlC,OAAT,CAAiBH,CAAjB,EAA4BC,CAA5B,EAAuCC,KAAvC,EAAqD;AACnD,eAAO,CAACF,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAAd,KAAoBC,KAAK,GAAG,CAAH,GAAO,CAAC,CAAjC,CAAP;AACD;;;;;;;;;ACnLD;AAAe;;;AAAA","file":"pages-support-management-faq_emp-grad-employer-faq-employer-faq-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbXBsb3llci1mYXEuY29tcG9uZW50LnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployerFaqComponent }  from './employer-faq.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: EmployerFaqComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployerFaqRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployerFaqRoutingModule } from './employer-faq-routing.module';\nimport { EmployerFaqComponent } from './employer-faq.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n\n\n@NgModule({\n  declarations: [\n    EmployerFaqComponent,\n  ],\n  imports: [\n    CommonModule,\n    EmployerFaqRoutingModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    FormsModule,\n    MatIconModule,\n    MatMenuModule,\n    MatInputModule,\n    ModalModule,\n    BsDropdownModule.forRoot() \n  ],\n  providers :[\n    BsModalRef\n  ]\n})\nexport class EmployerFaqModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { FormBuilder } from '@angular/forms';\nimport { TopgradserviceService } from '../../../../topgradservice.service';\n\nexport interface UserData {\n  id: string;\n  title: string;\n  category: string;\n  description: string;\n}\n\n/** Constants used to fill up our data base. */\n\nconst TITLE: string[] = [\n  'How do I keep track of a b c?', 'Lorem ipsum dolor sit?'\n];\n// const LASTNAME: string[] = [\n//   'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n//   'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n// ];\nconst CATEGORY: string[] = [\n  'General', 'My Account', 'Jobs', 'Permissions & Privacy', \n];\n\nconst DESCRIPTION: string[] = [\n  'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', \n];\n\n@Component({\n  selector: 'app-employer-faq',\n  templateUrl: './employer-faq.component.html',\n  styleUrls: ['./employer-faq.component.scss']\n})\nexport class EmployerFaqComponent implements OnInit {\n  displayedColumns: string[] = ['id', 'title', 'description', 'category', 'action'];\n  dataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n    \n  @ViewChild('smallModal') public smallModal: ModalDirective;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  EmployerFaqList: any;\n  totalRecords: any;\n  topPage: any;\n  sortedData: any;\n  search: any='';\n  filterValue: string;\n  item_id: any;\n\n  constructor( private Service:TopgradserviceService,  private fb : FormBuilder) {\n\n    \n\n    const users : UserData[] = [];\n    for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); };\n    this.dataSource = new MatTableDataSource(users);\n    this.sortedData = this.EmployerFaqList?.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.EmployerFaqList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'id':\n        return compare(a.id, b.id, isAsc);\n        case 'title':\n        return compare(a.id, b.id, isAsc);\n        case 'category':\n        return compare(a.id, b.id, isAsc);\n        case 'description':\n        return compare(a.id, b.id, isAsc);\n        default:\n        return 0;\n      }\n    });\n  }\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  ngOnInit(): void {\n    this.faqList();\n  }\n  paginationOptionChange(evt) {\n    console.log(\"evthrm\", evt)\n    this.topPage = evt.pageIndex\n    console.log('rsawsfsdsf',this.topPage)\n    var obj :any= {\n      user_type:\"employer\",\n      limit: evt.pageSize,\n      offset:  (evt.pageIndex * evt.pageSize)\n    }\n    if(this.search){\n      obj.search = this.search\n    }\n    this.Service.faqList(obj).subscribe(async data => {\n      console.log(\"Response of all the service listing>>>>>\", data);\n      this.EmployerFaqList=data.data,\n      this.sortedData=this.EmployerFaqList\n      this.totalRecords = data.count\n    })\n  }\n  getPageSizeOptions() {\n    return [5,10,25,50,100];\n  }\n  faqList(){\n    console.log(\"javascriptt========\");\n    var obj: any={\n      user_type:\"employer\",\n      limit:5,\n      offset:0\n    }\n    if(this.search){\n      obj.search = this.search\n    }\n    this.Service.faqList(obj).subscribe(res=>{\n        console.log(\"Response==========\",res);\n        this.EmployerFaqList=res.data\n        this.sortedData=this.EmployerFaqList\n        this.totalRecords = res.count\n      })\n      console.log(\"Object==========\",obj);\n    }\n\n\n    applyFilter(filterValue: string ) {\n      console.log(\"filterValue\", this.search);\n      this.faqList()\n    }\n\n    delete_id(id){\n      this.item_id=id\n      this.smallModal.show()\n      console.log(\"adsdsadsadsds\",this.item_id);\n      this.ngOnInit()\n    }\n    faqDelete(id){\n      var obj={\n        faq_id:id\n      }\n      console.log(\"adsdsadsadsds\",obj);\n      this.smallModal.hide()\n      this.Service.faqDelete(obj).subscribe(res=>{\n        console.log(\"Response==========\",res);\n        this.ngOnInit()\n        this.smallModal.hide()\n      })\n    }\n\n}\n\nfunction createNewUser(id: number): UserData {\n  const title = TITLE[Math.round(Math.random() * (TITLE.length - 1))] + ' ';\n  const category = CATEGORY[Math.round(Math.random() * (CATEGORY.length - 1))] + ' ';\n  const description = DESCRIPTION[Math.round(Math.random() * (DESCRIPTION.length - 1))] + ' ';\n  \n\n  return {\n    id: id.toString() + '.',\n    title: title,\n    category: category,\n    description: description,\n\n  };\n}\n\nfunction compare(a: string, b: string, isAsc: boolean): number {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n","export default \"<section class=\\\"jobs-mngmnt\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <mat-progress-bar mode=\\\"indeterminate\\\" value=\\\"100\\\" *ngIf=\\\"!sortedData\\\"></mat-progress-bar>\\n        <div class=\\\"catgry-tools d-flex justify-content-between align-items-center\\\">\\n          <mat-form-field appearance=\\\"standard\\\">\\n            <mat-label>Filter</mat-label>\\n            <input matInput (keyup)=\\\"applyFilter($event)\\\" [(ngModel)]=\\\"search\\\" placeholder=\\\"Ex. Mia\\\" class=\\\"filter_input\\\" #input>\\n          </mat-form-field>\\n          <span class=\\\"add-categry\\\">\\n            <a class=\\\"btn-primary btn\\\" routerLink=\\\"/add-faq\\\">Add FAQ</a>\\n          </span>\\n        </div>\\n\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table mat-table [dataSource]=\\\"sortedData\\\"  matSort (matSortChange)=\\\"sortData($event)\\\">\\n              <!-- Checkbox Column -->\\n              <!-- <ng-container matColumnDef=\\\"select\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                    [aria-label]=\\\"checkboxLabel()\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                    [aria-label]=\\\"checkboxLabel(row)\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </td>\\n              </ng-container> -->\\n              <!-- ID Column -->\\n              <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"id\\\"> S.No </th>\\n                <td mat-cell *matCellDef=\\\"let row; let i=index\\\"> {{i+1}} </td>\\n              </ng-container>\\n\\n              <!-- firstName Column -->\\n              <ng-container matColumnDef=\\\"title\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"title\\\">Title </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.title}} </td>\\n              </ng-container>\\n              <!-- Company Column -->\\n              <ng-container matColumnDef=\\\"category\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"category\\\">Category</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row?.category_data?.name}} </td>\\n              </ng-container>\\n             \\n              <!-- enquiry Column -->\\n              <ng-container matColumnDef=\\\"description\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"description\\\"> Description </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"td-width\\\" [innerHTML]=\\\"row.description\\\"></td>\\n              </ng-container>\\n\\n               <!-- Action column -->\\n               <ng-container matColumnDef=\\\"action\\\">\\n                <th mat-header-cell *matHeaderCellDef> Action </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"td-btn\\\">\\n                      <mat-icon>more_vert</mat-icon>\\n                    </button>\\n                    <mat-menu #menu=\\\"matMenu\\\" class=\\\"td-menu\\\">\\n                        <a mat-menu-item class=\\\"\\\" routerLink=\\\"/view-faq/{{row._id}}\\\">\\n                            <mat-icon class=\\\"material-icons-outlined\\\" (click)=\\\"view_id(row._id)\\\">visibility</mat-icon>\\n                            <span>View</span>\\n                        </a>\\n                        <a mat-menu-item class=\\\"\\\" routerLink=\\\"/edit-faq/{{row._id}}\\\"  >\\n                            <mat-icon class=\\\"material-icons-outlined\\\" (click)=\\\"edit_faq(row._id)\\\">edit</mat-icon>\\n                            <span>Edit</span>\\n                        </a>\\n                        \\n                        <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"smallModal.show()\\\">\\n                            <mat-icon class=\\\"material-icons-outlined\\\" (click)=\\\"delete_id(row._id)\\\">delete</mat-icon>\\n                            <span>Delete</span>\\n                        </a>\\n                    </mat-menu>\\n                </td>\\n              </ng-container>\\n\\n              <!-- Progress Column -->\\n              <!-- <ng-container matColumnDef=\\\"progress\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\n              </ng-container> -->\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n              <!-- Row shown when there is no matching data. -->\\n              <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n              </tr>\\n            </table>\\n          </div>\\n            <mat-paginator [length]=\\\"totalRecords\\\" [pageIndex]=\\\"topPage\\\" [pageSize]=\\\"limit\\\"\\n              [pageSizeOptions]=\\\"getPageSizeOptions()\\\" (page)=\\\"paginationOptionChange($event)\\\" showFirstLastButtons>\\n            </mat-paginator>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n<!-- Modal -->\\n<div bsModal #smallModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"smallModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"smallModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n            <img src=\\\"assets/img/Group 225.png\\\">\\n          </span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p>Are you sure you want to delete the selected FAQ?</p>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"smallModal.hide()\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"faqDelete(this.item_id)\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\";"]}