{"version":3,"sources":["webpack:///src/app/pages/content-management/privacy-policy/privacy-policy.module.ts","webpack:///src/app/pages/content-management/privacy-policy/privacy-policy.component.scss","webpack:///src/app/pages/content-management/privacy-policy/privacy-policy-routing.module.ts","webpack:///src/app/pages/content-management/privacy-policy/privacy-policy.component.ts","webpack:///src/app/pages/content-management/privacy-policy/privacy-policy.component.html"],"names":["PrivacyPolicyModule","declarations","imports","forRoot","providers","routes","path","component","PrivacyPolicyRoutingModule","forChild","exports","TITLE","LASTNAME","DESCRIPTION","PrivacyPolicyComponent","route","Service","_snackBar","displayedColumns","selection","users","Array","from","length","_","k","createNewUser","dataSource","policylist","privacypolicylist","console","log","obj","limit","offset","type","termslist","subscribe","data","totalRecords","err","status","id","smallModal","show","delId","content_id","deleteterm","res","hide","code","open","duration","ngOnInit","numSelected","selected","numRows","isAllSelected","clear","select","row","isSelected","selector","template","title","Math","round","random","description","toString"],"mappings":"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","file":"pages-content-management-privacy-policy-privacy-policy-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { PrivacyPolicyComponent } from './privacy-policy.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { PrivacyPolicyRoutingModule } from './privacy-policy-routing.module';\n//import { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    PrivacyPolicyComponent\n  ],\n  imports: [\n    CommonModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatTableModule,\n    MatIconModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatButtonModule,\n    MatInputModule,\n    MatMenuModule,\n    ModalModule,\n    BsDropdownModule.forRoot() ,\n  //  FormsModule,ReactiveFormsModule,\n    PrivacyPolicyRoutingModule\n  ],\n  providers: [\n    BsModalRef\n  ]\n})\nexport class PrivacyPolicyModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcml2YWN5LXBvbGljeS5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PrivacyPolicyComponent } from './privacy-policy.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: PrivacyPolicyComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PrivacyPolicyRoutingModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild  } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TopgradserviceService } from '../../../topgradservice.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n//import { ToastrService } from 'ngx-toastr';\n\nexport interface UserData {\n  id: string;\n  title: string;\n  // category: string;\n  description: string;\n}\n\n/** Constants used to fill up our data base. */\n\nconst TITLE: string[] = [\n  'How do I keep track of a b c?', 'Lorem ipsum dolor sit?'\n];\nconst LASTNAME: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n// const CATEGORY: string[] = [\n//   'General', 'My Account', 'Jobs', 'Permissions & Privacy', \n// ];\n\nconst DESCRIPTION: string[] = [\n  'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', 'Lorem ipsum sit donar Lorem ipsum sit donar', \n];\n\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n\n\n  displayedColumns: string[] = ['select', 'id', 'title', 'description', 'action'];\n  dataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n\n  @ViewChild('smallModal') public smallModal: ModalDirective;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  privacyform:FormGroup\n  title: any;\n  description: any;\n  policylist: any;\n  totalRecords: any;\n  delId: any;\n  constructor(private route:ActivatedRoute,private Service:TopgradserviceService,private _snackBar: MatSnackBar ) { \n    \n    const users = Array.from({length: 50}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(this.policylist);\n  }\n  ngOnInit(): void {\n     this.privacypolicylist();\n  }\n\n  privacypolicylist(){\n    console.log(\"khjhgjhgjhgjhghjghjgjhghjg\");\n    \n    var obj = {\n    limit:10,\n    offset:0,\n    type: \"privacy\"\n    }\n    console.log(\"onnnn\", obj)\n    this.Service.termslist(obj).subscribe(data => {\n    console.log(\"main data for privacy is ====\", data)\n    this.policylist=data.data\n    this.totalRecords=data.length;\n    }, err => {\n    console.log(err.status)\n    if (err.status >= 404) {\n    console.log('Some error occured')\n    } else {\n    // this.toastr.error('Some error occured, please try again!!', 'Error')\n    console.log('Internet Connection Error')\n    }\n    })\n  }\n\n  modal(id){\n    this.smallModal.show()\n    this.delId=id\n  }\n  \n\n  deleteheading(id){\n    var obj = {\n      content_id: id\n    }\n    this.Service.deleteterm(obj).subscribe(res=>{\n      console.log(\"fgdgfdgfdfgdfgd\",res);\n      this.smallModal.hide()\n      if(res.code==200){\n        this._snackBar.open(\"Heading Deleted Successfully\",\"close\",{\n          duration: 2000\n        });\n        this.ngOnInit()\n      }\n    },err => {\n      console.log(err);\n      this._snackBar.open(\"Some Error Occued\",\"close\",{\n        duration: 2000})\n      })\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n   /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserData): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n}\n\nfunction createNewUser(id: number): UserData {\n  const title = TITLE[Math.round(Math.random() * (TITLE.length - 1))] + ' ';\n  // const category = CATEGORY[Math.round(Math.random() * (CATEGORY.length - 1))] + ' ';\n  const description = DESCRIPTION[Math.round(Math.random() * (DESCRIPTION.length - 1))] + ' ';\n  \n\n  return {\n    id: id.toString() + '.',\n    title: title,\n    description: description,\n\n  };\n\n  \n}\n","export default \"<section class=\\\"privcy_polcy\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t<div class=\\\"catgry-tools d-flex justify-content-between align-items-center\\\">\\n\\t\\t\\t\\t\\t<mat-form-field appearance=\\\"standard\\\">\\n\\t\\t\\t\\t\\t\\t<mat-label>Filter</mat-label>\\n\\t\\t\\t\\t\\t\\t<input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Mia\\\" class=\\\"filter_input\\\" #input>\\n\\t\\t\\t\\t\\t</mat-form-field>\\n\\t\\t\\t\\t\\t<span class=\\\"add-categry\\\">\\n\\t\\t\\t\\t\\t\\t<a class=\\\"btn-primary btn\\\" routerLink=\\\"/addHeading/privacy\\\">Add Heading</a>\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"mat-elevation-z8\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t<table mat-table [dataSource]=\\\"policylist\\\" matSort>\\n\\t\\t\\t\\t\\t\\t\\t<!-- Checkbox Column -->\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"select\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[aria-label]=\\\"checkboxLabel()\\\" class=\\\"td-check\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t</th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"$event ? selection.toggle(row) : null\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[checked]=\\\"selection.isSelected(row)\\\" [aria-label]=\\\"checkboxLabel(row)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\\"td-check\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-checkbox>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t<!-- ID Column -->\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"id\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> S.No </th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let row ; let i=index\\\"> {{i+1}} </td>\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- firstName Column -->\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"title\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header>Heading </th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let row\\\"> {{row?.heading.title}} </td>\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t\\t\\t\\t<!-- Company Column -->\\n\\t\\t\\t\\t\\t\\t\\t<!-- <ng-container matColumnDef=\\\"category\\\">\\n\\t\\t\\t\\t  <th mat-header-cell *matHeaderCellDef mat-sort-header>Category</th>\\n\\t\\t\\t\\t  <td mat-cell *matCellDef=\\\"let row\\\"> {{row.category}} </td>\\n\\t\\t\\t\\t</ng-container> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- enquiry Column -->\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"description\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let row\\\" class=\\\"td-width\\\" [innerHTML]=\\\"row?.heading.description\\\"> </td>\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Action column -->\\n\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"action\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef> Action </th>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"td-btn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon>more_vert</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-menu #menu=\\\"matMenu\\\" class=\\\"td-menu\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a mat-menu-item class=\\\"\\\" routerLink=\\\"/terms-conditions-sub-headings/{{row._id}}/privacy\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"material-icons-outlined\\\">visibility</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>View Subheading</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a mat-menu-item class=\\\"\\\" routerLink=\\\"/editHeading/{{row._id}}\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"material-icons-outlined\\\">edit</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Edit</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"modal(row._id)\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-icon class=\\\"material-icons-outlined\\\">delete</mat-icon>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>Delete</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</mat-menu>\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t</ng-container>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Progress Column -->\\n\\t\\t\\t\\t\\t\\t\\t<!-- <ng-container matColumnDef=\\\"progress\\\">\\n\\t\\t\\t\\t  <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\n\\t\\t\\t\\t  <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\n\\t\\t\\t\\t</ng-container> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n\\t\\t\\t\\t\\t\\t\\t<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n\\t\\t\\t\\t\\t\\t\\t<!-- Row shown when there is no matching data. -->\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"mat-row\\\" *matNoDataRow>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" aria-label=\\\"Select page of users\\\">\\n\\t\\t\\t\\t\\t</mat-paginator>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</section>\\n\\n<!-- Modal -->\\n<div bsModal #smallModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"smallModalLabel\\\"\\n\\taria-hidden=\\\"true\\\">\\n\\t<div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-header\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"smallModal.hide()\\\" aria-label=\\\"Close\\\">\\n\\t\\t\\t\\t\\t<span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"assets/img/Group 225.png\\\">\\n\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-body\\\">\\n\\t\\t\\t\\t<p>Are you sure you want to delete the selected Terms?</p>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"modal-footer justify-content-center\\\">\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"smallModal.hide()\\\">No</button>\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteheading(this.delId)\\\">Yes</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\";"]}