{"version":3,"sources":["./src/app/pages/UserManagement/employers-list/employers-list-routing.module.ts","./src/app/pages/UserManagement/employers-list/employers-list.component.html","./src/app/pages/UserManagement/employers-list/employers-list.module.ts","./src/app/pages/UserManagement/employers-list/employers-list.component.ts","./src/app/pages/UserManagement/employers-list/employers-list.component.scss"],"names":[],"mappings":"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","file":"pages-UserManagement-employers-list-employers-list-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployersListComponent } from './employers-list.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: EmployersListComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployersListRoutingModule { }\n","export default \"<section class=\\\"employer-mng-list\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"tabl_upr d-flex align-items-center justify-content-between\\\">\\n          <mat-form-field appearance=\\\"standard\\\">\\n            <mat-label>Filter</mat-label>\\n            <input matInput (keyup)=\\\"applyFilter($event)\\\" [(ngModel)]=\\\"search\\\" placeholder=\\\"Ex. Mia\\\" class=\\\"filter_input\\\" #input>\\n          </mat-form-field>\\n          <!-- <div class=\\\"fltr_div d-flex align-items-center\\\">\\n            <div class=\\\"form-group mb-0 ml-3\\\">\\n              <select class=\\\"form-control custom-select\\\">\\n                  <option selected>Select Filter</option>\\n                  <option>Location</option>\\n                  <option>Work Preference</option>\\n                  <option>Availability</option>\\n                  <option>Education</option>\\n                  <option>License</option>\\n                  <option>Work Rights</option>\\n                  <option>Skills</option>\\n              </select>\\n            </div>\\n\\n            <div class=\\\"form-group mb-0 ml-3\\\">\\n              <select class=\\\"form-control custom-select\\\">\\n                  <option selected>Select Sub-Filter</option>\\n                  <option>Melbourne</option>\\n                  <option>Sydney</option>\\n              </select>\\n            </div>\\n            <div class=\\\"appl_fltr ml-3\\\">\\n              <button class=\\\"btn btn-primary\\\">\\n              Apply Filter\\n            </button>\\n            </div>\\n          </div> -->\\n        </div>\\n\\n        <div class=\\\"mat-elevation-z8\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table mat-table [dataSource]=\\\"emplist\\\" matSort>\\n\\n              <!-- Checkbox Column -->\\n              <ng-container matColumnDef=\\\"select\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                    [aria-label]=\\\"checkboxLabel()\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                  <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                    [aria-label]=\\\"checkboxLabel(row)\\\" class=\\\"td-check\\\">\\n                  </mat-checkbox>\\n                </td>\\n              </ng-container>\\n              <!-- ID Column -->\\n              <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> S.No </th>\\n                <td mat-cell *matCellDef=\\\"let row ; let i=index\\\">  {{i+1}} </td>\\n              </ng-container>\\n\\n              <!-- Name Column -->\\n              <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>First Name </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.first_name}} </td>\\n              </ng-container>\\n               <!-- lname Column -->\\n              <ng-container matColumnDef=\\\"lname\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.last_name}} </td>\\n              </ng-container>\\n              <!-- Email Column -->\\n              <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Work Email Address</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </td>\\n              </ng-container>\\n              <!-- Company Column -->\\n              <ng-container matColumnDef=\\\"company\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Company Name</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.company_name}} </td>\\n              </ng-container>\\n               <!-- Job title Column -->\\n              <ng-container matColumnDef=\\\"jobtitle\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Job Title</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.role}} </td>\\n              </ng-container>\\n               <!-- creation date Column -->\\n              <ng-container matColumnDef=\\\"creation\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Creation Date (Time)</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.createdAt | date}} </td>\\n              </ng-container>\\n              <!-- status column -->\\n              <ng-container matColumnDef=\\\"status\\\">\\n                <th mat-header-cell *matHeaderCellDef> Status </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" >\\n                     <mat-slide-toggle [checked]=\\\"row.status=='active'?true:false\\\"></mat-slide-toggle>\\n                   </td>\\n              </ng-container>\\n               <!-- Action column -->\\n               <ng-container matColumnDef=\\\"action\\\">\\n                <th mat-header-cell *matHeaderCellDef> Action </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" class=\\\"td-btn\\\">\\n                      <mat-icon>more_vert</mat-icon>\\n                    </button>\\n                    <mat-menu #menu=\\\"matMenu\\\" class=\\\"td-menu\\\">\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"/viewEmployer/{{row._id}}\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">visibility</mat-icon>\\n                        <span>View</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"/editEmployer/{{row._id}}\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">edit</mat-icon>\\n                        <span>Edit</span>\\n                      </a>\\n                      <!-- <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"resetpswrd.show()\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">cached</mat-icon>\\n                        <span>Reset Password</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">block</mat-icon>\\n                        <span>Ban</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">message</mat-icon>\\n                        <span>Send Message</span>\\n                      </a>\\n                      <a mat-menu-item class=\\\"\\\" routerLink=\\\"\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\">email</mat-icon>\\n                        <span>Send Email</span>\\n                      </a> -->\\n                      <a mat-menu-item class=\\\"\\\" data-toggle=\\\"modal\\\" (click)=\\\"modal(row._id)\\\">\\n                        <mat-icon class=\\\"material-icons-outlined\\\" >delete</mat-icon>\\n                        <span>Delete</span>\\n                      </a>\\n                    </mat-menu>\\n                </td>\\n              </ng-container>\\n\\n              <!-- Progress Column -->\\n              <!-- <ng-container matColumnDef=\\\"progress\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Progress </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.progress}}% </td>\\n              </ng-container> -->\\n\\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n              <!-- Row shown when there is no matching data. -->\\n              <tr class=\\\"mat-row\\\" *matNoDataRow>\\n                <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the filter \\\"{{input.value}}\\\"</td>\\n              </tr>\\n            </table>\\n          </div>\\n          <mat-paginator [length]=\\\"totalRecords\\\" [pageIndex]=\\\"topPage\\\" [pageSize]=\\\"limit\\\"\\n          [pageSizeOptions]=\\\"getPageSizeOptions()\\\" (page)=\\\"paginationOptionChange($event)\\\" aria-label=\\\"Select page of users\\\"></mat-paginator>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n\\n<!-- Modal -->\\n<div bsModal #smallModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"smallModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"smallModal.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n            <img src=\\\"assets/img/Group 225.png\\\">\\n          </span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <p class=\\\"mb-0\\\">Are you sure you want to delete the selected user's account?</p>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"smallModal.hide()\\\">No</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteEmployer(this.delId)\\\">Yes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div bsModal #resetpswrd=\\\"bs-modal\\\" class=\\\"modal fade reset_pswrd\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"replyModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close td-btn\\\" (click)=\\\"resetpswrd.hide()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\" class=\\\"prof_modclose\\\">\\n            <img src=\\\"assets/img/Group 225.png\\\">\\n          </span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <form>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Current Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" value=\\\"abc123@\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>New Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Confirm Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer justify-content-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"resetpswrd.hide()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmployersListComponent } from './employers-list.component';\n\nimport { EmployersListRoutingModule } from './employers-list-routing.module';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\n\n@NgModule({\n  declarations: [\n    EmployersListComponent\n  ],\n  imports: [\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatTableModule,\n    FormsModule,\n    MatIconModule,\n    MatMenuModule,\n    MatInputModule,\n    ModalModule,\n    BsDropdownModule.forRoot() ,\n    EmployersListRoutingModule,\n    CommonModule,\n    MatProgressBarModule\n  ],\n  providers: [BsModalRef]\n})\nexport class EmployersListModule { }\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ModalDirective} from 'ngx-bootstrap/modal';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport { TopgradserviceService } from '../../../topgradservice.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  lname: string;\n  email: string;\n  company: string;\n  jobtitle: string;\n  creation: string;\n}\n\n/** Constants used to fill up our data base. */\nconst LNAME: string[] = [\n  'A', 'T', 'V', 'C', 'J', 'R', 'J', 'J'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', \n];\nconst EMAILS: string[] = [\n  'maia@gmail.com', 'asher@gmail.com', 'olivia@gmail.com', 'atticus@gmail.com', 'amelia@gmail.com', 'jack@gmail.com', 'charlotte@gmail.com', 'theodore@gmail.com', 'isla@gmail.com', 'oliver@gmail.com',\n  'isabella@gmail.com', 'jasper@gmail.com', 'cora@gmail.com', 'levi@gmail.com', 'violet@gmail.com', 'arthur@gmail.com', 'mia@gmail.com', 'thomas@gmail.com', 'elizabeth@gmail.com'\n];\nconst COMPANY: string[] = [\n  'Promatics', 'PromaticsA', 'PromaticsB', 'PromaticsC', 'PromaticsD', 'PromaticsE', 'PromaticsF', 'PromaticsG', 'Promatics', 'Promatics',\n  'Promatics', 'Promatics', 'Promatics', 'Promatics', 'Promatics', 'Promatics', 'Promatics', 'Promatics', 'Promatics'\n];\nconst TITLE: string[] = [\n  'Employer', 'Employer', 'Employer', 'Employer', 'Employer', 'Employer', 'Employer', 'Employer', 'Employer', 'Promatics',\n  'Promatics', 'Promatics', 'Employer', 'Employer', 'Employer', 'Employer', 'Employer', 'Promatics', 'Promatics'\n];\nconst CREATION: string[] = [\n  '12-01-2012 (06:22 PM)', '12-12-2012 (02:22 PM)', '12-12-2012 (03:12 PM)', '24-11-2012 (03:12 PM)', '12-01-2012 (06:22 PM)', '12-01-2012 (02:22 PM)', '12-01-2012 (03:12 PM)', '12-01-2012 (03:12 PM)', '12-01-2012 (03:12 PM)',\n  '09-01-2021 (06:22 PM)', '09-01-2021 (06:22 PM)', '12-01-2012 (02:22 PM)', '12-04-2012 (03:12 PM)', '12-01-2012 (06:22 PM)', '12-01-2012 (02:22 PM)', '12-01-2012 (02:22 PM)', '09-01-2021 (03:12 PM)'\n];\n\n\n@Component({\n  selector: 'app-employers-list',\n  templateUrl: './employers-list.component.html',\n  styleUrls: ['./employers-list.component.scss']\n})\nexport class EmployersListComponent implements AfterViewInit {\n  emplist=[]\n  displayedColumns: string[] = ['select', 'id', 'name', 'lname', 'email', 'company', 'jobtitle','status', 'creation', 'action'];\n  dataSource: MatTableDataSource<UserData>;\n  selection = new SelectionModel<UserData>(true, []);\n\n\n  @ViewChild('smallModal') public smallModal: ModalDirective;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  totalRecords: any;\n  delId: any;\n  event: any;\n  topPage: any;\n  sortedData: any;\n  search: any;\n\n  constructor(private route:ActivatedRoute,private Service:TopgradserviceService,private _snackBar: MatSnackBar) {\n    // Create 100 users\n    const users = Array.from({length: 50}, (_, k) => createNewUser(k + 1));\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n   ngOnInit(): void {\n    this.search=''\n    this.employerlist();\n  }\n\n  modal(id){\n    this.smallModal.show()\n    this.delId=id\n  }\n\n  deleteEmployer(id){\n    var obj = {\n      deletedAt : true,\n      user_id: id\n    }\n    this.Service.deleteuser(obj).subscribe(res=>{\n      console.log(\"fgdgfdgfdfgdfgd\",res);\n      this.smallModal.hide()\n      if(res.code==200){\n        this._snackBar.open(\"User Deleted Successfully\",\"close\",{\n          duration: 2000\n        });\n        this.ngOnInit()\n      }\n    },err => {\n      console.log(err);\n      this._snackBar.open(\"Some Error Occued\",\"close\",{\n        duration: 2000})\n      })\n  }\n\n  employerlist(){\n    console.log(\"khjhgjhgjhgjhghjghjgjhghjg\");\n    \n    var obj:any = {\n    limit: 5,\n    offset: 0,\n    role: \"Employer\",\n    search:this.search\n    }\n    console.log(\"onnnn\", obj)\n    this.Service.emplist(obj).subscribe(data => {\n    console.log(\"main data for users is ====\", data)\n    this.emplist=data.data\n    this.totalRecords=data.length;\n    }, err => {\n    console.log(err.status)\n    if (err.status >= 404) {\n    console.log('Some error occured')\n    } else {\n    // this.toastr.error('Some error occured, please try again!!', 'Error')\n    console.log('Internet Connection Error')\n    }\n    })\n    }\n\n\n  applyFilter(filterValue) {\n   \n    this.search=filterValue.target.value\n    console.log(\"search\", this.search);\n    \n    console.log(\"after searchhhhh-00------------0=====\",this.event);\n\n    if(this.event){\n      console.log(\"after searchhhhh=====\",this.event);\n      \n      this.paginationOptionChange(this.event)\n    }\n    else{\n      this.employerlist()\n\n    }\n\n  }\n\n  paginationOptionChange(evt) {\n    this.event=evt\n    console.log(\"evthrm\", evt)\n    this.topPage = evt.pageIndex\n    console.log('rsawsfsdsf',this.topPage)\n    console.log(\"pagesize is======\",evt.pageSize);\n    \n   var obj:any = {\n    role: \"Employer\",\n    search:this.search,\n    limit: evt.pageSize,\n    offset: (evt.pageIndex*evt.pageSize)\n     }\n    //  if(this.search){\n    //   obj.search = this.search\n    // }\n    console.log(\"paginator obj==========\",obj);\n    \n     this.Service.emplist(obj).subscribe(async data => {\n       console.log(\"Response of all the service listing>>>>>\", data);\n        this.emplist=data.data,\n        this.sortedData=this.emplist\n        this.totalRecords = data.count\n     })\n  }\n  getPageSizeOptions() {\n    return [5,10,50,100];\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n\n    this.selection.select(...this.dataSource.data);\n  }\n\n   /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: UserData): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n}\n\nfunction createNewUser(id: number): UserData {\n  const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ';\n  const email = EMAILS[Math.round(Math.random() * (EMAILS.length - 1))] + ' ';\n  const company = COMPANY[Math.round(Math.random() * (COMPANY.length - 1))] + ' ';\n  const jobtitle = TITLE[Math.round(Math.random() * (TITLE.length - 1))] + ' ';\n  const creation = CREATION[Math.round(Math.random() * (CREATION.length - 1))] + ' ';\n\n  return {\n    id: id.toString() + '.',\n    name: name,\n    email: email,\n    company: company,\n    jobtitle: jobtitle,\n    creation: creation,\n    lname: LNAME[Math.round(Math.random() * (LNAME.length - 1))],\n\n  };\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbXBsb3llcnMtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}